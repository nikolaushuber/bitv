(* This file is generated by ortac qcheck-stm,
   edit how you run the tool instead *)
[@@@ocaml.warning "-26-27-69-32-38"]
open Bitv_spec
module Ortac_runtime = Ortac_runtime_qcheck_stm
let map2 f s1 s2 =
  try
    Ortac_runtime.Gospelstdlib.Sequence.init
      (Ortac_runtime.Gospelstdlib.Sequence.length s1)
      (fun i ->
         f (Ortac_runtime.Gospelstdlib.__mix_Bub s1 i)
           (Ortac_runtime.Gospelstdlib.__mix_Bub s2 i))
  with
  | e ->
      raise
        (Ortac_runtime.Partial_function
           (e,
             {
               Ortac_runtime.start =
                 {
                   pos_fname = "bitv_spec.mli";
                   pos_lnum = 24;
                   pos_bol = 1572;
                   pos_cnum = 1580
                 };
               Ortac_runtime.stop =
                 {
                   pos_fname = "bitv_spec.mli";
                   pos_lnum = 24;
                   pos_bol = 1572;
                   pos_cnum = 1639
                 }
             }))
let population bits =
  try
    Ortac_runtime.Gospelstdlib.Sequence.fold_left
      (fun acc ->
         fun b_1 ->
           if b_1 = true
           then
             Ortac_runtime.Gospelstdlib.(+) acc
               (Ortac_runtime.Gospelstdlib.integer_of_int 1)
           else acc) (Ortac_runtime.Gospelstdlib.integer_of_int 0) bits
  with
  | e ->
      raise
        (Ortac_runtime.Partial_function
           (e,
             {
               Ortac_runtime.start =
                 {
                   pos_fname = "bitv_spec.mli";
                   pos_lnum = 27;
                   pos_bol = 1835;
                   pos_cnum = 1843
                 };
               Ortac_runtime.stop =
                 {
                   pos_fname = "bitv_spec.mli";
                   pos_lnum = 27;
                   pos_bol = 1835;
                   pos_cnum = 1910
                 }
             }))
let op_and a_1 b_2 =
  try if (a_1 = true) && (b_2 = true) then true else false
  with
  | e ->
      raise
        (Ortac_runtime.Partial_function
           (e,
             {
               Ortac_runtime.start =
                 {
                   pos_fname = "bitv_spec.mli";
                   pos_lnum = 29;
                   pos_bol = 2051;
                   pos_cnum = 2106
                 };
               Ortac_runtime.stop =
                 {
                   pos_fname = "bitv_spec.mli";
                   pos_lnum = 29;
                   pos_bol = 2051;
                   pos_cnum = 2112
                 }
             }))
let op_or a_2 b_3 =
  try if (a_2 = true) || (b_3 = true) then true else false
  with
  | e ->
      raise
        (Ortac_runtime.Partial_function
           (e,
             {
               Ortac_runtime.start =
                 {
                   pos_fname = "bitv_spec.mli";
                   pos_lnum = 30;
                   pos_bol = 2238;
                   pos_cnum = 2292
                 };
               Ortac_runtime.stop =
                 {
                   pos_fname = "bitv_spec.mli";
                   pos_lnum = 30;
                   pos_bol = 2238;
                   pos_cnum = 2298
                 }
             }))
let op_not a_3 =
  try if not (a_3 = true) then true else false
  with
  | e ->
      raise
        (Ortac_runtime.Partial_function
           (e,
             {
               Ortac_runtime.start =
                 {
                   pos_fname = "bitv_spec.mli";
                   pos_lnum = 31;
                   pos_bol = 2423;
                   pos_cnum = 2467
                 };
               Ortac_runtime.stop =
                 {
                   pos_fname = "bitv_spec.mli";
                   pos_lnum = 31;
                   pos_bol = 2423;
                   pos_cnum = 2472
                 }
             }))
let op_xor a_4 b_4 =
  try if a_4 = true then (if b_4 = true then false else true) else b_4
  with
  | e ->
      raise
        (Ortac_runtime.Partial_function
           (e,
             {
               Ortac_runtime.start =
                 {
                   pos_fname = "bitv_spec.mli";
                   pos_lnum = 34;
                   pos_bol = 2642;
                   pos_cnum = 2650
                 };
               Ortac_runtime.stop =
                 {
                   pos_fname = "bitv_spec.mli";
                   pos_lnum = 36;
                   pos_bol = 2698;
                   pos_cnum = 2712
                 }
             }))
module SUT =
  (Ortac_runtime.SUT.Make)(struct
                             type sut = t
                             let init () = create 8 false
                           end)
module ModelElt =
  struct
    type nonrec elt =
      {
      size: Ortac_runtime.integer ;
      bits_1: bool Ortac_runtime.Gospelstdlib.sequence }
    let init =
      let n = 8
      and b_5 = false in
      {
        size =
          (try Ortac_runtime.Gospelstdlib.integer_of_int n
           with
           | e ->
               raise
                 (Ortac_runtime.Partial_function
                    (e,
                      {
                        Ortac_runtime.start =
                          {
                            pos_fname = "bitv_spec.mli";
                            pos_lnum = 50;
                            pos_bol = 3512;
                            pos_cnum = 3541
                          };
                        Ortac_runtime.stop =
                          {
                            pos_fname = "bitv_spec.mli";
                            pos_lnum = 50;
                            pos_bol = 3512;
                            pos_cnum = 3542
                          }
                      })));
        bits_1 =
          (try
             Ortac_runtime.Gospelstdlib.Sequence.init
               (Ortac_runtime.Gospelstdlib.integer_of_int n) (fun _ -> b_5)
           with
           | e ->
               raise
                 (Ortac_runtime.Partial_function
                    (e,
                      {
                        Ortac_runtime.start =
                          {
                            pos_fname = "bitv_spec.mli";
                            pos_lnum = 51;
                            pos_bol = 3543;
                            pos_cnum = 3572
                          };
                        Ortac_runtime.stop =
                          {
                            pos_fname = "bitv_spec.mli";
                            pos_lnum = 51;
                            pos_bol = 3543;
                            pos_cnum = 3600
                          }
                      })))
      }
  end
module Model = (Ortac_runtime.Model.Make)(ModelElt)
module Spec =
  struct
    open STM
    type _ ty +=  
      | Integer: Ortac_runtime.integer ty 
    let integer = (Integer, Ortac_runtime.string_of_integer)
    type _ ty +=  
      | SUT: SUT.elt ty 
    let sut = (SUT, (fun _ -> "<sut>"))
    type sut = SUT.t
    let init_sut = SUT.create 2
    type state = Model.t
    let init_state = Model.create 2 ()
    type cmd =
      | Create of int * bool 
      | Set of int * bool 
      | Get of int 
      | Length 
      | Equal 
      | Copy 
      | Append 
      | Sub of int * int 
      | Fill of int * int * bool 
      | Blit of int * int * int 
      | Pop 
      | Bw_and 
      | Bw_or 
      | Bw_xor 
      | Bw_not 
      | Shiftl of int 
      | Shiftr of int 
      | Rotatel of int 
      | Rotater of int 
      | All_zeros 
      | All_ones 
    let show_cmd cmd__001_ =
      match cmd__001_ with
      | Create (n, b_5) ->
          Format.asprintf "protect (fun () -> %s %a %a)" "create"
            (Util.Pp.pp_int true) n (Util.Pp.pp_bool true) b_5
      | Set (n_1, b_6) ->
          Format.asprintf "protect (fun () -> %s <sut> %a %a)" "set"
            (Util.Pp.pp_int true) n_1 (Util.Pp.pp_bool true) b_6
      | Get n_2 ->
          Format.asprintf "protect (fun () -> %s <sut> %a)" "get"
            (Util.Pp.pp_int true) n_2
      | Length -> Format.asprintf "%s <sut>" "length"
      | Equal -> Format.asprintf "%s <sut> <sut>" "equal"
      | Copy -> Format.asprintf "%s <sut>" "copy"
      | Append -> Format.asprintf "%s <sut> <sut>" "append"
      | Sub (start, len) ->
          Format.asprintf "protect (fun () -> %s <sut> %a %a)" "sub"
            (Util.Pp.pp_int true) start (Util.Pp.pp_int true) len
      | Fill (ofs, len_1, b_7) ->
          Format.asprintf "protect (fun () -> %s <sut> %a %a %a)" "fill"
            (Util.Pp.pp_int true) ofs (Util.Pp.pp_int true) len_1
            (Util.Pp.pp_bool true) b_7
      | Blit (o1, o2, len_2) ->
          Format.asprintf "protect (fun () -> %s <sut> %a <sut> %a %a)"
            "blit" (Util.Pp.pp_int true) o1 (Util.Pp.pp_int true) o2
            (Util.Pp.pp_int true) len_2
      | Pop -> Format.asprintf "%s <sut>" "pop"
      | Bw_and ->
          Format.asprintf "protect (fun () -> %s <sut> <sut>)" "bw_and"
      | Bw_or -> Format.asprintf "protect (fun () -> %s <sut> <sut>)" "bw_or"
      | Bw_xor ->
          Format.asprintf "protect (fun () -> %s <sut> <sut>)" "bw_xor"
      | Bw_not -> Format.asprintf "%s <sut>" "bw_not"
      | Shiftl n_3 ->
          Format.asprintf "%s <sut> %a" "shiftl" (Util.Pp.pp_int true) n_3
      | Shiftr n_4 ->
          Format.asprintf "%s <sut> %a" "shiftr" (Util.Pp.pp_int true) n_4
      | Rotatel n_5 ->
          Format.asprintf "%s <sut> %a" "rotatel" (Util.Pp.pp_int true) n_5
      | Rotater n_6 ->
          Format.asprintf "%s <sut> %a" "rotater" (Util.Pp.pp_int true) n_6
      | All_zeros -> Format.asprintf "%s <sut>" "all_zeros"
      | All_ones -> Format.asprintf "%s <sut>" "all_ones"
    let cleanup _ = ()
    let arb_cmd _ =
      let open QCheck in
        make ~print:show_cmd
          (let open Gen in
             frequency
               [(1,
                  (((pure (fun n -> fun b_5 -> Create (n, b_5))) <*>
                      small_signed_int)
                     <*> bool));
               (100,
                 (((pure (fun n_1 -> fun b_6 -> Set (n_1, b_6))) <*> int) <*>
                    bool));
               (100, ((pure (fun n_2 -> Get n_2)) <*> int));
               (100, (pure Length));
               (100, (pure Equal));
               (1, (pure Copy));
               (1, (pure Append));
               (1,
                 (((pure (fun start -> fun len -> Sub (start, len))) <*> int)
                    <*> int));
               (100,
                 ((((pure
                       (fun ofs ->
                          fun len_1 -> fun b_7 -> Fill (ofs, len_1, b_7)))
                      <*> int)
                     <*> int)
                    <*> bool));
               (100,
                 ((((pure
                       (fun o1 -> fun o2 -> fun len_2 -> Blit (o1, o2, len_2)))
                      <*> int)
                     <*> int)
                    <*> int));
               (100, (pure Pop));
               (1, (pure Bw_and));
               (1, (pure Bw_or));
               (1, (pure Bw_xor));
               (1, (pure Bw_not));
               (1, ((pure (fun n_3 -> Shiftl n_3)) <*> int));
               (1, ((pure (fun n_4 -> Shiftr n_4)) <*> int));
               (1, ((pure (fun n_5 -> Rotatel n_5)) <*> int));
               (1, ((pure (fun n_6 -> Rotater n_6)) <*> int));
               (100, (pure All_zeros));
               (100, (pure All_ones))])
    let next_state cmd__002_ state__003_ =
      match cmd__002_ with
      | Create (n, b_5) ->
          if
            (try
               Ortac_runtime.Gospelstdlib.(>=)
                 (Ortac_runtime.Gospelstdlib.integer_of_int n)
                 (Ortac_runtime.Gospelstdlib.integer_of_int 0)
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "bitv_spec.mli";
                              pos_lnum = 49;
                              pos_bol = 3486;
                              pos_cnum = 3505
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "bitv_spec.mli";
                              pos_lnum = 49;
                              pos_bol = 3486;
                              pos_cnum = 3511
                            }
                        })))
          then
            let t_1__005_ =
              let open ModelElt in
                {
                  size =
                    (try Ortac_runtime.Gospelstdlib.integer_of_int n
                     with
                     | e ->
                         raise
                           (Ortac_runtime.Partial_function
                              (e,
                                {
                                  Ortac_runtime.start =
                                    {
                                      pos_fname = "bitv_spec.mli";
                                      pos_lnum = 50;
                                      pos_bol = 3512;
                                      pos_cnum = 3541
                                    };
                                  Ortac_runtime.stop =
                                    {
                                      pos_fname = "bitv_spec.mli";
                                      pos_lnum = 50;
                                      pos_bol = 3512;
                                      pos_cnum = 3542
                                    }
                                })));
                  bits_1 =
                    (try
                       Ortac_runtime.Gospelstdlib.Sequence.init
                         (Ortac_runtime.Gospelstdlib.integer_of_int n)
                         (fun _ -> b_5)
                     with
                     | e ->
                         raise
                           (Ortac_runtime.Partial_function
                              (e,
                                {
                                  Ortac_runtime.start =
                                    {
                                      pos_fname = "bitv_spec.mli";
                                      pos_lnum = 51;
                                      pos_bol = 3543;
                                      pos_cnum = 3572
                                    };
                                  Ortac_runtime.stop =
                                    {
                                      pos_fname = "bitv_spec.mli";
                                      pos_lnum = 51;
                                      pos_bol = 3543;
                                      pos_cnum = 3600
                                    }
                                })))
                } in
            Model.push (Model.drop_n state__003_ 0) t_1__005_
          else state__003_
      | Set (n_1, b_6) ->
          let v__006_ = Model.get state__003_ 0 in
          if
            (try
               let __t1__008_ =
                 Ortac_runtime.Gospelstdlib.(<=)
                   (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                   (Ortac_runtime.Gospelstdlib.integer_of_int n_1) in
               let __t2__009_ =
                 Ortac_runtime.Gospelstdlib.(<)
                   (Ortac_runtime.Gospelstdlib.integer_of_int n_1)
                   v__006_.size in
               __t1__008_ && __t2__009_
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "bitv_spec.mli";
                              pos_lnum = 60;
                              pos_bol = 4209;
                              pos_cnum = 4228
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "bitv_spec.mli";
                              pos_lnum = 60;
                              pos_bol = 4209;
                              pos_cnum = 4243
                            }
                        })))
          then
            let v__007_ =
              let open ModelElt in
                {
                  v__006_ with
                  bits_1 =
                    (try
                       Ortac_runtime.Gospelstdlib.Sequence.set v__006_.bits_1
                         (Ortac_runtime.Gospelstdlib.integer_of_int n_1) b_6
                     with
                     | e ->
                         raise
                           (Ortac_runtime.Partial_function
                              (e,
                                {
                                  Ortac_runtime.start =
                                    {
                                      pos_fname = "bitv_spec.mli";
                                      pos_lnum = 62;
                                      pos_bol = 4272;
                                      pos_cnum = 4301
                                    };
                                  Ortac_runtime.stop =
                                    {
                                      pos_fname = "bitv_spec.mli";
                                      pos_lnum = 62;
                                      pos_bol = 4272;
                                      pos_cnum = 4330
                                    }
                                })))
                } in
            Model.push (Model.drop_n state__003_ 1) v__007_
          else state__003_
      | Get n_2 ->
          let v_1__010_ = Model.get state__003_ 0 in
          if
            (try
               let __t1__012_ =
                 Ortac_runtime.Gospelstdlib.(<=)
                   (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                   (Ortac_runtime.Gospelstdlib.integer_of_int n_2) in
               let __t2__013_ =
                 Ortac_runtime.Gospelstdlib.(<)
                   (Ortac_runtime.Gospelstdlib.integer_of_int n_2)
                   v_1__010_.size in
               __t1__012_ && __t2__013_
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "bitv_spec.mli";
                              pos_lnum = 67;
                              pos_bol = 4711;
                              pos_cnum = 4730
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "bitv_spec.mli";
                              pos_lnum = 67;
                              pos_bol = 4711;
                              pos_cnum = 4745
                            }
                        })))
          then
            let v_1__011_ = v_1__010_ in
            Model.push (Model.drop_n state__003_ 1) v_1__011_
          else state__003_
      | Length ->
          let v_2__014_ = Model.get state__003_ 0 in
          let v_2__015_ = v_2__014_ in
          Model.push (Model.drop_n state__003_ 1) v_2__015_
      | Equal ->
          let v1__016_ = Model.get state__003_ 0
          and v2__017_ = Model.get state__003_ 1 in
          let v1__019_ = v1__016_
          and v2__018_ = v2__017_ in
          Model.push (Model.push (Model.drop_n state__003_ 2) v2__018_)
            v1__019_
      | Copy ->
          let v_3__020_ = Model.get state__003_ 0 in
          let v_3__023_ = v_3__020_
          and r__022_ =
            let open ModelElt in
              {
                size =
                  (try v_3__020_.size
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 113;
                                    pos_bol = 7240;
                                    pos_cnum = 7269
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 113;
                                    pos_bol = 7240;
                                    pos_cnum = 7275
                                  }
                              })));
                bits_1 =
                  (try v_3__020_.bits_1
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 114;
                                    pos_bol = 7276;
                                    pos_cnum = 7305
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 114;
                                    pos_bol = 7276;
                                    pos_cnum = 7311
                                  }
                              })))
              } in
          Model.push (Model.push (Model.drop_n state__003_ 1) v_3__023_)
            r__022_
      | Append ->
          let v1_1__024_ = Model.get state__003_ 0
          and v2_1__025_ = Model.get state__003_ 1 in
          let v1_1__029_ = v1_1__024_
          and v2_1__028_ = v2_1__025_
          and r_1__027_ =
            let open ModelElt in
              {
                size =
                  (try
                     Ortac_runtime.Gospelstdlib.(+) v1_1__024_.size
                       v2_1__025_.size
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 120;
                                    pos_bol = 7740;
                                    pos_cnum = 7777
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 120;
                                    pos_bol = 7740;
                                    pos_cnum = 7778
                                  }
                              })));
                bits_1 =
                  (try
                     Ortac_runtime.Gospelstdlib.(++) v1_1__024_.bits_1
                       v2_1__025_.bits_1
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 121;
                                    pos_bol = 7787;
                                    pos_cnum = 7824
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 121;
                                    pos_bol = 7787;
                                    pos_cnum = 7826
                                  }
                              })))
              } in
          Model.push
            (Model.push (Model.push (Model.drop_n state__003_ 2) v2_1__028_)
               v1_1__029_) r_1__027_
      | Sub (start, len) ->
          let v_4__030_ = Model.get state__003_ 0 in
          if
            (try
               let __t1__034_ =
                 Ortac_runtime.Gospelstdlib.(<=)
                   (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                   (Ortac_runtime.Gospelstdlib.integer_of_int len) in
               let __t2__035_ =
                 Ortac_runtime.Gospelstdlib.(<=)
                   (Ortac_runtime.Gospelstdlib.integer_of_int len)
                   v_4__030_.size in
               __t1__034_ && __t2__035_
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "bitv_spec.mli";
                              pos_lnum = 137;
                              pos_bol = 8715;
                              pos_cnum = 8734
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "bitv_spec.mli";
                              pos_lnum = 137;
                              pos_bol = 8715;
                              pos_cnum = 8752
                            }
                        })))
              &&
              ((try
                  let __t1__036_ =
                    Ortac_runtime.Gospelstdlib.(<=)
                      (Ortac_runtime.Gospelstdlib.integer_of_int len)
                      (Ortac_runtime.Gospelstdlib.(+)
                         (Ortac_runtime.Gospelstdlib.integer_of_int len)
                         (Ortac_runtime.Gospelstdlib.integer_of_int start)) in
                  let __t2__037_ =
                    Ortac_runtime.Gospelstdlib.(<=)
                      (Ortac_runtime.Gospelstdlib.(+)
                         (Ortac_runtime.Gospelstdlib.integer_of_int len)
                         (Ortac_runtime.Gospelstdlib.integer_of_int start))
                      v_4__030_.size in
                  __t1__036_ && __t2__037_
                with
                | e ->
                    raise
                      (Ortac_runtime.Partial_function
                         (e,
                           {
                             Ortac_runtime.start =
                               {
                                 pos_fname = "bitv_spec.mli";
                                 pos_lnum = 138;
                                 pos_bol = 8753;
                                 pos_cnum = 8772
                               };
                             Ortac_runtime.stop =
                               {
                                 pos_fname = "bitv_spec.mli";
                                 pos_lnum = 138;
                                 pos_bol = 8753;
                                 pos_cnum = 8800
                               }
                           }))))
          then
            let v_4__033_ = v_4__030_
            and r_2__032_ =
              let open ModelElt in
                {
                  size =
                    (try Ortac_runtime.Gospelstdlib.integer_of_int len
                     with
                     | e ->
                         raise
                           (Ortac_runtime.Partial_function
                              (e,
                                {
                                  Ortac_runtime.start =
                                    {
                                      pos_fname = "bitv_spec.mli";
                                      pos_lnum = 139;
                                      pos_bol = 8801;
                                      pos_cnum = 8830
                                    };
                                  Ortac_runtime.stop =
                                    {
                                      pos_fname = "bitv_spec.mli";
                                      pos_lnum = 139;
                                      pos_bol = 8801;
                                      pos_cnum = 8833
                                    }
                                })));
                  bits_1 =
                    (try
                       if
                         (Ortac_runtime.Gospelstdlib.integer_of_int len) =
                           (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                       then Ortac_runtime.Gospelstdlib.Sequence.empty
                       else
                         Ortac_runtime.Gospelstdlib.__mix_Buddub
                           v_4__030_.bits_1
                           (Ortac_runtime.Gospelstdlib.integer_of_int start)
                           (Ortac_runtime.Gospelstdlib.(-)
                              (Ortac_runtime.Gospelstdlib.(+)
                                 (Ortac_runtime.Gospelstdlib.integer_of_int
                                    start)
                                 (Ortac_runtime.Gospelstdlib.integer_of_int
                                    len))
                              (Ortac_runtime.Gospelstdlib.integer_of_int 1))
                     with
                     | e ->
                         raise
                           (Ortac_runtime.Partial_function
                              (e,
                                {
                                  Ortac_runtime.start =
                                    {
                                      pos_fname = "bitv_spec.mli";
                                      pos_lnum = 140;
                                      pos_bol = 8834;
                                      pos_cnum = 8863
                                    };
                                  Ortac_runtime.stop =
                                    {
                                      pos_fname = "bitv_spec.mli";
                                      pos_lnum = 140;
                                      pos_bol = 8834;
                                      pos_cnum = 8925
                                    }
                                })))
                } in
            Model.push (Model.push (Model.drop_n state__003_ 1) v_4__033_)
              r_2__032_
          else state__003_
      | Fill (ofs, len_1, b_7) ->
          let v_5__038_ = Model.get state__003_ 0 in
          if
            (try
               Ortac_runtime.Gospelstdlib.(<=)
                 (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                 (Ortac_runtime.Gospelstdlib.integer_of_int ofs)
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "bitv_spec.mli";
                              pos_lnum = 148;
                              pos_bol = 9549;
                              pos_cnum = 9568
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "bitv_spec.mli";
                              pos_lnum = 148;
                              pos_bol = 9549;
                              pos_cnum = 9576
                            }
                        })))
              &&
              ((try
                  Ortac_runtime.Gospelstdlib.(<=)
                    (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                    (Ortac_runtime.Gospelstdlib.integer_of_int len_1)
                with
                | e ->
                    raise
                      (Ortac_runtime.Partial_function
                         (e,
                           {
                             Ortac_runtime.start =
                               {
                                 pos_fname = "bitv_spec.mli";
                                 pos_lnum = 149;
                                 pos_bol = 9577;
                                 pos_cnum = 9596
                               };
                             Ortac_runtime.stop =
                               {
                                 pos_fname = "bitv_spec.mli";
                                 pos_lnum = 149;
                                 pos_bol = 9577;
                                 pos_cnum = 9604
                               }
                           })))
                 &&
                 ((try
                     Ortac_runtime.Gospelstdlib.(<=)
                       (Ortac_runtime.Gospelstdlib.(+)
                          (Ortac_runtime.Gospelstdlib.integer_of_int ofs)
                          (Ortac_runtime.Gospelstdlib.integer_of_int len_1))
                       v_5__038_.size
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 150;
                                    pos_bol = 9605;
                                    pos_cnum = 9624
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 150;
                                    pos_bol = 9605;
                                    pos_cnum = 9643
                                  }
                              })))))
          then
            let v_5__041_ =
              let open ModelElt in
                {
                  v_5__038_ with
                  bits_1 =
                    (try
                       Ortac_runtime.Gospelstdlib.Sequence.init
                         v_5__038_.size
                         (fun i_1 ->
                            if
                              let __t1__039_ =
                                Ortac_runtime.Gospelstdlib.(<=)
                                  (Ortac_runtime.Gospelstdlib.integer_of_int
                                     ofs) i_1 in
                              let __t2__040_ =
                                Ortac_runtime.Gospelstdlib.(<) i_1
                                  (Ortac_runtime.Gospelstdlib.(+)
                                     (Ortac_runtime.Gospelstdlib.integer_of_int
                                        ofs)
                                     (Ortac_runtime.Gospelstdlib.integer_of_int
                                        len_1)) in
                              __t1__039_ && __t2__040_
                            then b_7
                            else
                              Ortac_runtime.Gospelstdlib.__mix_Bub
                                v_5__038_.bits_1 i_1)
                     with
                     | e ->
                         raise
                           (Ortac_runtime.Partial_function
                              (e,
                                {
                                  Ortac_runtime.start =
                                    {
                                      pos_fname = "bitv_spec.mli";
                                      pos_lnum = 152;
                                      pos_bol = 9672;
                                      pos_cnum = 9701
                                    };
                                  Ortac_runtime.stop =
                                    {
                                      pos_fname = "bitv_spec.mli";
                                      pos_lnum = 154;
                                      pos_bol = 9744;
                                      pos_cnum = 9822
                                    }
                                })))
                } in
            Model.push (Model.drop_n state__003_ 1) v_5__041_
          else state__003_
      | Blit (o1, o2, len_2) ->
          let v1_2__042_ = Model.get state__003_ 0
          and v2_2__043_ = Model.get state__003_ 1 in
          if
            (try
               let __t1__046_ =
                 Ortac_runtime.Gospelstdlib.(<=)
                   (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                   (Ortac_runtime.Gospelstdlib.integer_of_int o1) in
               let __t2__047_ =
                 let __t1__048_ =
                   Ortac_runtime.Gospelstdlib.(<=)
                     (Ortac_runtime.Gospelstdlib.integer_of_int o1)
                     (Ortac_runtime.Gospelstdlib.(+)
                        (Ortac_runtime.Gospelstdlib.integer_of_int o1)
                        (Ortac_runtime.Gospelstdlib.integer_of_int len_2)) in
                 let __t2__049_ =
                   Ortac_runtime.Gospelstdlib.(<=)
                     (Ortac_runtime.Gospelstdlib.(+)
                        (Ortac_runtime.Gospelstdlib.integer_of_int o1)
                        (Ortac_runtime.Gospelstdlib.integer_of_int len_2))
                     v1_2__042_.size in
                 __t1__048_ && __t2__049_ in
               __t1__046_ && __t2__047_
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "bitv_spec.mli";
                              pos_lnum = 165;
                              pos_bol = 10703;
                              pos_cnum = 10722
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "bitv_spec.mli";
                              pos_lnum = 165;
                              pos_bol = 10703;
                              pos_cnum = 10752
                            }
                        })))
              &&
              ((try
                  let __t1__050_ =
                    Ortac_runtime.Gospelstdlib.(<=)
                      (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                      (Ortac_runtime.Gospelstdlib.integer_of_int o2) in
                  let __t2__051_ =
                    let __t1__052_ =
                      Ortac_runtime.Gospelstdlib.(<=)
                        (Ortac_runtime.Gospelstdlib.integer_of_int o2)
                        (Ortac_runtime.Gospelstdlib.(+)
                           (Ortac_runtime.Gospelstdlib.integer_of_int o2)
                           (Ortac_runtime.Gospelstdlib.integer_of_int len_2)) in
                    let __t2__053_ =
                      Ortac_runtime.Gospelstdlib.(<=)
                        (Ortac_runtime.Gospelstdlib.(+)
                           (Ortac_runtime.Gospelstdlib.integer_of_int o2)
                           (Ortac_runtime.Gospelstdlib.integer_of_int len_2))
                        v2_2__043_.size in
                    __t1__052_ && __t2__053_ in
                  __t1__050_ && __t2__051_
                with
                | e ->
                    raise
                      (Ortac_runtime.Partial_function
                         (e,
                           {
                             Ortac_runtime.start =
                               {
                                 pos_fname = "bitv_spec.mli";
                                 pos_lnum = 166;
                                 pos_bol = 10753;
                                 pos_cnum = 10772
                               };
                             Ortac_runtime.stop =
                               {
                                 pos_fname = "bitv_spec.mli";
                                 pos_lnum = 166;
                                 pos_bol = 10753;
                                 pos_cnum = 10802
                               }
                           }))))
          then
            let v1_2__045_ = v1_2__042_
            and v2_2__044_ =
              let open ModelElt in
                {
                  v2_2__043_ with
                  bits_1 =
                    (try
                       if
                         (Ortac_runtime.Gospelstdlib.integer_of_int o2) =
                           (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                       then
                         Ortac_runtime.Gospelstdlib.(++)
                           (Ortac_runtime.Gospelstdlib.__mix_Buddub
                              v1_2__042_.bits_1
                              (Ortac_runtime.Gospelstdlib.integer_of_int o1)
                              (Ortac_runtime.Gospelstdlib.(-)
                                 (Ortac_runtime.Gospelstdlib.(+)
                                    (Ortac_runtime.Gospelstdlib.integer_of_int
                                       o1)
                                    (Ortac_runtime.Gospelstdlib.integer_of_int
                                       len_2))
                                 (Ortac_runtime.Gospelstdlib.integer_of_int 1)))
                           (Ortac_runtime.Gospelstdlib.__mix_Buddb
                              v2_2__043_.bits_1
                              (Ortac_runtime.Gospelstdlib.integer_of_int
                                 len_2))
                       else
                         Ortac_runtime.Gospelstdlib.(++)
                           (Ortac_runtime.Gospelstdlib.(++)
                              (Ortac_runtime.Gospelstdlib.__mix_Bddub
                                 v2_2__043_.bits_1
                                 (Ortac_runtime.Gospelstdlib.(-)
                                    (Ortac_runtime.Gospelstdlib.integer_of_int
                                       o2)
                                    (Ortac_runtime.Gospelstdlib.integer_of_int
                                       1)))
                              (Ortac_runtime.Gospelstdlib.__mix_Buddub
                                 v1_2__042_.bits_1
                                 (Ortac_runtime.Gospelstdlib.integer_of_int
                                    o1)
                                 (Ortac_runtime.Gospelstdlib.(-)
                                    (Ortac_runtime.Gospelstdlib.(+)
                                       (Ortac_runtime.Gospelstdlib.integer_of_int
                                          o1)
                                       (Ortac_runtime.Gospelstdlib.integer_of_int
                                          len_2))
                                    (Ortac_runtime.Gospelstdlib.integer_of_int
                                       1))))
                           (Ortac_runtime.Gospelstdlib.__mix_Buddb
                              v2_2__043_.bits_1
                              (Ortac_runtime.Gospelstdlib.(+)
                                 (Ortac_runtime.Gospelstdlib.integer_of_int
                                    o2)
                                 (Ortac_runtime.Gospelstdlib.integer_of_int
                                    len_2)))
                     with
                     | e ->
                         raise
                           (Ortac_runtime.Partial_function
                              (e,
                                {
                                  Ortac_runtime.start =
                                    {
                                      pos_fname = "bitv_spec.mli";
                                      pos_lnum = 169;
                                      pos_bol = 10862;
                                      pos_cnum = 10878
                                    };
                                  Ortac_runtime.stop =
                                    {
                                      pos_fname = "bitv_spec.mli";
                                      pos_lnum = 170;
                                      pos_bol = 10939;
                                      pos_cnum = 11027
                                    }
                                })))
                } in
            Model.push (Model.push (Model.drop_n state__003_ 2) v2_2__044_)
              v1_2__045_
          else state__003_
      | Pop ->
          let v_6__054_ = Model.get state__003_ 0 in
          let v_6__055_ = v_6__054_ in
          Model.push (Model.drop_n state__003_ 1) v_6__055_
      | Bw_and ->
          let v1_3__056_ = Model.get state__003_ 0
          and v2_3__057_ = Model.get state__003_ 1 in
          if
            (try v1_3__056_.size = v2_3__057_.size
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "bitv_spec.mli";
                              pos_lnum = 228;
                              pos_bol = 14042;
                              pos_cnum = 14061
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "bitv_spec.mli";
                              pos_lnum = 228;
                              pos_bol = 14042;
                              pos_cnum = 14078
                            }
                        })))
          then
            let v1_3__061_ = v1_3__056_
            and v2_3__060_ = v2_3__057_
            and r_3__059_ =
              let open ModelElt in
                {
                  size =
                    (try v1_3__056_.size
                     with
                     | e ->
                         raise
                           (Ortac_runtime.Partial_function
                              (e,
                                {
                                  Ortac_runtime.start =
                                    {
                                      pos_fname = "bitv_spec.mli";
                                      pos_lnum = 229;
                                      pos_bol = 14079;
                                      pos_cnum = 14108
                                    };
                                  Ortac_runtime.stop =
                                    {
                                      pos_fname = "bitv_spec.mli";
                                      pos_lnum = 229;
                                      pos_bol = 14079;
                                      pos_cnum = 14115
                                    }
                                })));
                  bits_1 =
                    (try map2 op_and v1_3__056_.bits_1 v2_3__057_.bits_1
                     with
                     | e ->
                         raise
                           (Ortac_runtime.Partial_function
                              (e,
                                {
                                  Ortac_runtime.start =
                                    {
                                      pos_fname = "bitv_spec.mli";
                                      pos_lnum = 230;
                                      pos_bol = 14116;
                                      pos_cnum = 14145
                                    };
                                  Ortac_runtime.stop =
                                    {
                                      pos_fname = "bitv_spec.mli";
                                      pos_lnum = 230;
                                      pos_bol = 14116;
                                      pos_cnum = 14149
                                    }
                                })))
                } in
            Model.push
              (Model.push
                 (Model.push (Model.drop_n state__003_ 2) v2_3__060_)
                 v1_3__061_) r_3__059_
          else state__003_
      | Bw_or ->
          let v1_4__062_ = Model.get state__003_ 0
          and v2_4__063_ = Model.get state__003_ 1 in
          if
            (try v1_4__062_.size = v2_4__063_.size
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "bitv_spec.mli";
                              pos_lnum = 236;
                              pos_bol = 14633;
                              pos_cnum = 14652
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "bitv_spec.mli";
                              pos_lnum = 236;
                              pos_bol = 14633;
                              pos_cnum = 14669
                            }
                        })))
          then
            let v1_4__067_ = v1_4__062_
            and v2_4__066_ = v2_4__063_
            and r_4__065_ =
              let open ModelElt in
                {
                  size =
                    (try v1_4__062_.size
                     with
                     | e ->
                         raise
                           (Ortac_runtime.Partial_function
                              (e,
                                {
                                  Ortac_runtime.start =
                                    {
                                      pos_fname = "bitv_spec.mli";
                                      pos_lnum = 237;
                                      pos_bol = 14670;
                                      pos_cnum = 14699
                                    };
                                  Ortac_runtime.stop =
                                    {
                                      pos_fname = "bitv_spec.mli";
                                      pos_lnum = 237;
                                      pos_bol = 14670;
                                      pos_cnum = 14706
                                    }
                                })));
                  bits_1 =
                    (try map2 op_or v1_4__062_.bits_1 v2_4__063_.bits_1
                     with
                     | e ->
                         raise
                           (Ortac_runtime.Partial_function
                              (e,
                                {
                                  Ortac_runtime.start =
                                    {
                                      pos_fname = "bitv_spec.mli";
                                      pos_lnum = 238;
                                      pos_bol = 14707;
                                      pos_cnum = 14736
                                    };
                                  Ortac_runtime.stop =
                                    {
                                      pos_fname = "bitv_spec.mli";
                                      pos_lnum = 238;
                                      pos_bol = 14707;
                                      pos_cnum = 14740
                                    }
                                })))
                } in
            Model.push
              (Model.push
                 (Model.push (Model.drop_n state__003_ 2) v2_4__066_)
                 v1_4__067_) r_4__065_
          else state__003_
      | Bw_xor ->
          let v1_5__068_ = Model.get state__003_ 0
          and v2_5__069_ = Model.get state__003_ 1 in
          if
            (try v1_5__068_.size = v2_5__069_.size
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "bitv_spec.mli";
                              pos_lnum = 244;
                              pos_bol = 15224;
                              pos_cnum = 15243
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "bitv_spec.mli";
                              pos_lnum = 244;
                              pos_bol = 15224;
                              pos_cnum = 15260
                            }
                        })))
          then
            let v1_5__073_ = v1_5__068_
            and v2_5__072_ = v2_5__069_
            and r_5__071_ =
              let open ModelElt in
                {
                  size =
                    (try v1_5__068_.size
                     with
                     | e ->
                         raise
                           (Ortac_runtime.Partial_function
                              (e,
                                {
                                  Ortac_runtime.start =
                                    {
                                      pos_fname = "bitv_spec.mli";
                                      pos_lnum = 245;
                                      pos_bol = 15261;
                                      pos_cnum = 15290
                                    };
                                  Ortac_runtime.stop =
                                    {
                                      pos_fname = "bitv_spec.mli";
                                      pos_lnum = 245;
                                      pos_bol = 15261;
                                      pos_cnum = 15297
                                    }
                                })));
                  bits_1 =
                    (try map2 op_xor v1_5__068_.bits_1 v2_5__069_.bits_1
                     with
                     | e ->
                         raise
                           (Ortac_runtime.Partial_function
                              (e,
                                {
                                  Ortac_runtime.start =
                                    {
                                      pos_fname = "bitv_spec.mli";
                                      pos_lnum = 246;
                                      pos_bol = 15298;
                                      pos_cnum = 15327
                                    };
                                  Ortac_runtime.stop =
                                    {
                                      pos_fname = "bitv_spec.mli";
                                      pos_lnum = 246;
                                      pos_bol = 15298;
                                      pos_cnum = 15331
                                    }
                                })))
                } in
            Model.push
              (Model.push
                 (Model.push (Model.drop_n state__003_ 2) v2_5__072_)
                 v1_5__073_) r_5__071_
          else state__003_
      | Bw_not ->
          let v_7__074_ = Model.get state__003_ 0 in
          let v_7__077_ = v_7__074_
          and r_6__076_ =
            let open ModelElt in
              {
                size =
                  (try v_7__074_.size
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 251;
                                    pos_bol = 15657;
                                    pos_cnum = 15686
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 251;
                                    pos_bol = 15657;
                                    pos_cnum = 15692
                                  }
                              })));
                bits_1 =
                  (try
                     Ortac_runtime.Gospelstdlib.Sequence.map op_not
                       v_7__074_.bits_1
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 252;
                                    pos_bol = 15693;
                                    pos_cnum = 15722
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 252;
                                    pos_bol = 15693;
                                    pos_cnum = 15748
                                  }
                              })))
              } in
          Model.push (Model.push (Model.drop_n state__003_ 1) v_7__077_)
            r_6__076_
      | Shiftl n_3 ->
          let v_8__078_ = Model.get state__003_ 0 in
          let v_8__081_ = v_8__078_
          and r_7__080_ =
            let open ModelElt in
              {
                size =
                  (try v_8__078_.size
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 257;
                                    pos_bol = 16159;
                                    pos_cnum = 16188
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 257;
                                    pos_bol = 16159;
                                    pos_cnum = 16194
                                  }
                              })));
                bits_1 =
                  (try
                     if
                       (Ortac_runtime.Gospelstdlib.integer_of_int n_3) =
                         (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                     then v_8__078_.bits_1
                     else
                       if
                         Ortac_runtime.Gospelstdlib.(>)
                           (Ortac_runtime.Gospelstdlib.integer_of_int n_3)
                           (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                       then
                         (if
                            Ortac_runtime.Gospelstdlib.(<)
                              (Ortac_runtime.Gospelstdlib.integer_of_int n_3)
                              v_8__078_.size
                          then
                            Ortac_runtime.Gospelstdlib.(++)
                              (Ortac_runtime.Gospelstdlib.Sequence.init
                                 (Ortac_runtime.Gospelstdlib.integer_of_int
                                    n_3) (fun _ -> false))
                              (Ortac_runtime.Gospelstdlib.__mix_Bddub
                                 v_8__078_.bits_1
                                 (Ortac_runtime.Gospelstdlib.(-)
                                    (Ortac_runtime.Gospelstdlib.(-)
                                       v_8__078_.size
                                       (Ortac_runtime.Gospelstdlib.integer_of_int
                                          n_3))
                                    (Ortac_runtime.Gospelstdlib.integer_of_int
                                       1)))
                          else
                            Ortac_runtime.Gospelstdlib.Sequence.init
                              v_8__078_.size (fun _ -> false))
                       else
                         if
                           Ortac_runtime.Gospelstdlib.(<)
                             (Ortac_runtime.Gospelstdlib.(~-)
                                (Ortac_runtime.Gospelstdlib.integer_of_int
                                   n_3)) v_8__078_.size
                         then
                           Ortac_runtime.Gospelstdlib.(++)
                             (Ortac_runtime.Gospelstdlib.__mix_Buddb
                                v_8__078_.bits_1
                                (Ortac_runtime.Gospelstdlib.(~-)
                                   (Ortac_runtime.Gospelstdlib.integer_of_int
                                      n_3)))
                             (Ortac_runtime.Gospelstdlib.Sequence.init
                                (Ortac_runtime.Gospelstdlib.(~-)
                                   (Ortac_runtime.Gospelstdlib.integer_of_int
                                      n_3)) (fun _ -> false))
                         else
                           Ortac_runtime.Gospelstdlib.Sequence.init
                             v_8__078_.size (fun _ -> false)
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 259;
                                    pos_bol = 16224;
                                    pos_cnum = 16240
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 265;
                                    pos_bol = 16578;
                                    pos_cnum = 16640
                                  }
                              })))
              } in
          Model.push (Model.push (Model.drop_n state__003_ 1) v_8__081_)
            r_7__080_
      | Shiftr n_4 ->
          let v_9__082_ = Model.get state__003_ 0 in
          let v_9__085_ = v_9__082_
          and r_8__084_ =
            let open ModelElt in
              {
                size =
                  (try v_9__082_.size
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 270;
                                    pos_bol = 17058;
                                    pos_cnum = 17087
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 270;
                                    pos_bol = 17058;
                                    pos_cnum = 17093
                                  }
                              })));
                bits_1 =
                  (try
                     if
                       (Ortac_runtime.Gospelstdlib.integer_of_int n_4) =
                         (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                     then v_9__082_.bits_1
                     else
                       if
                         Ortac_runtime.Gospelstdlib.(>)
                           (Ortac_runtime.Gospelstdlib.integer_of_int n_4)
                           (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                       then
                         (if
                            Ortac_runtime.Gospelstdlib.(<)
                              (Ortac_runtime.Gospelstdlib.integer_of_int n_4)
                              v_9__082_.size
                          then
                            Ortac_runtime.Gospelstdlib.(++)
                              (Ortac_runtime.Gospelstdlib.__mix_Buddb
                                 v_9__082_.bits_1
                                 (Ortac_runtime.Gospelstdlib.integer_of_int
                                    n_4))
                              (Ortac_runtime.Gospelstdlib.Sequence.init
                                 (Ortac_runtime.Gospelstdlib.integer_of_int
                                    n_4) (fun _ -> false))
                          else
                            Ortac_runtime.Gospelstdlib.Sequence.init
                              v_9__082_.size (fun _ -> false))
                       else
                         if
                           Ortac_runtime.Gospelstdlib.(<)
                             (Ortac_runtime.Gospelstdlib.(~-)
                                (Ortac_runtime.Gospelstdlib.integer_of_int
                                   n_4)) v_9__082_.size
                         then
                           Ortac_runtime.Gospelstdlib.(++)
                             (Ortac_runtime.Gospelstdlib.Sequence.init
                                (Ortac_runtime.Gospelstdlib.(~-)
                                   (Ortac_runtime.Gospelstdlib.integer_of_int
                                      n_4)) (fun _ -> false))
                             (Ortac_runtime.Gospelstdlib.__mix_Bddub
                                v_9__082_.bits_1
                                (Ortac_runtime.Gospelstdlib.(-)
                                   (Ortac_runtime.Gospelstdlib.(+)
                                      v_9__082_.size
                                      (Ortac_runtime.Gospelstdlib.integer_of_int
                                         n_4))
                                   (Ortac_runtime.Gospelstdlib.integer_of_int
                                      1)))
                         else
                           Ortac_runtime.Gospelstdlib.Sequence.init
                             v_9__082_.size (fun _ -> false)
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 272;
                                    pos_bol = 17123;
                                    pos_cnum = 17139
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 278;
                                    pos_bol = 17474;
                                    pos_cnum = 17536
                                  }
                              })))
              } in
          Model.push (Model.push (Model.drop_n state__003_ 1) v_9__085_)
            r_8__084_
      | Rotatel n_5 ->
          let v_10__086_ = Model.get state__003_ 0 in
          let v_10__089_ = v_10__086_
          and r_9__088_ =
            let open ModelElt in
              {
                size =
                  (try v_10__086_.size
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 283;
                                    pos_bol = 17952;
                                    pos_cnum = 17981
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 283;
                                    pos_bol = 17952;
                                    pos_cnum = 17987
                                  }
                              })));
                bits_1 =
                  (try
                     if
                       (Ortac_runtime.Gospelstdlib.integer_of_int n_5) =
                         (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                     then v_10__086_.bits_1
                     else
                       if
                         Ortac_runtime.Gospelstdlib.(>)
                           (Ortac_runtime.Gospelstdlib.integer_of_int n_5)
                           (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                       then
                         Ortac_runtime.Gospelstdlib.(++)
                           (Ortac_runtime.Gospelstdlib.__mix_Buddb
                              v_10__086_.bits_1
                              (Ortac_runtime.Gospelstdlib.(-) v_10__086_.size
                                 (Ortac_runtime.Gospelstdlib.(mod)
                                    (Ortac_runtime.Gospelstdlib.integer_of_int
                                       n_5) v_10__086_.size)))
                           (Ortac_runtime.Gospelstdlib.__mix_Bddub
                              v_10__086_.bits_1
                              (Ortac_runtime.Gospelstdlib.(-)
                                 (Ortac_runtime.Gospelstdlib.(-)
                                    v_10__086_.size
                                    (Ortac_runtime.Gospelstdlib.(mod)
                                       (Ortac_runtime.Gospelstdlib.integer_of_int
                                          n_5) v_10__086_.size))
                                 (Ortac_runtime.Gospelstdlib.integer_of_int 1)))
                       else
                         Ortac_runtime.Gospelstdlib.(++)
                           (Ortac_runtime.Gospelstdlib.__mix_Buddb
                              v_10__086_.bits_1
                              (Ortac_runtime.Gospelstdlib.(mod)
                                 (Ortac_runtime.Gospelstdlib.(~-)
                                    (Ortac_runtime.Gospelstdlib.integer_of_int
                                       n_5)) v_10__086_.size))
                           (Ortac_runtime.Gospelstdlib.__mix_Bddub
                              v_10__086_.bits_1
                              (Ortac_runtime.Gospelstdlib.(-)
                                 (Ortac_runtime.Gospelstdlib.(mod)
                                    (Ortac_runtime.Gospelstdlib.(~-)
                                       (Ortac_runtime.Gospelstdlib.integer_of_int
                                          n_5)) v_10__086_.size)
                                 (Ortac_runtime.Gospelstdlib.integer_of_int 1)))
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 285;
                                    pos_bol = 18017;
                                    pos_cnum = 18033
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 287;
                                    pos_bol = 18168;
                                    pos_cnum = 18253
                                  }
                              })))
              } in
          Model.push (Model.push (Model.drop_n state__003_ 1) v_10__089_)
            r_9__088_
      | Rotater n_6 ->
          let v_11__090_ = Model.get state__003_ 0 in
          let v_11__093_ = v_11__090_
          and r_10__092_ =
            let open ModelElt in
              {
                size =
                  (try v_11__090_.size
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 292;
                                    pos_bol = 18692;
                                    pos_cnum = 18721
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 292;
                                    pos_bol = 18692;
                                    pos_cnum = 18727
                                  }
                              })));
                bits_1 =
                  (try
                     if
                       (Ortac_runtime.Gospelstdlib.integer_of_int n_6) =
                         (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                     then v_11__090_.bits_1
                     else
                       if
                         Ortac_runtime.Gospelstdlib.(>)
                           (Ortac_runtime.Gospelstdlib.integer_of_int n_6)
                           (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                       then
                         Ortac_runtime.Gospelstdlib.(++)
                           (Ortac_runtime.Gospelstdlib.__mix_Buddb
                              v_11__090_.bits_1
                              (Ortac_runtime.Gospelstdlib.(mod)
                                 (Ortac_runtime.Gospelstdlib.integer_of_int
                                    n_6) v_11__090_.size))
                           (Ortac_runtime.Gospelstdlib.__mix_Bddub
                              v_11__090_.bits_1
                              (Ortac_runtime.Gospelstdlib.(-)
                                 (Ortac_runtime.Gospelstdlib.(mod)
                                    (Ortac_runtime.Gospelstdlib.integer_of_int
                                       n_6) v_11__090_.size)
                                 (Ortac_runtime.Gospelstdlib.integer_of_int 1)))
                       else
                         Ortac_runtime.Gospelstdlib.(++)
                           (Ortac_runtime.Gospelstdlib.__mix_Buddb
                              v_11__090_.bits_1
                              (Ortac_runtime.Gospelstdlib.(-) v_11__090_.size
                                 (Ortac_runtime.Gospelstdlib.(mod)
                                    (Ortac_runtime.Gospelstdlib.(~-)
                                       (Ortac_runtime.Gospelstdlib.integer_of_int
                                          n_6)) v_11__090_.size)))
                           (Ortac_runtime.Gospelstdlib.__mix_Bddub
                              v_11__090_.bits_1
                              (Ortac_runtime.Gospelstdlib.(-)
                                 (Ortac_runtime.Gospelstdlib.(-)
                                    v_11__090_.size
                                    (Ortac_runtime.Gospelstdlib.(mod)
                                       (Ortac_runtime.Gospelstdlib.(~-)
                                          (Ortac_runtime.Gospelstdlib.integer_of_int
                                             n_6)) v_11__090_.size))
                                 (Ortac_runtime.Gospelstdlib.integer_of_int 1)))
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 294;
                                    pos_bol = 18757;
                                    pos_cnum = 18773
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 296;
                                    pos_bol = 18888;
                                    pos_cnum = 18993
                                  }
                              })))
              } in
          Model.push (Model.push (Model.drop_n state__003_ 1) v_11__093_)
            r_10__092_
      | All_zeros ->
          let v_12__094_ = Model.get state__003_ 0 in
          let v_12__095_ = v_12__094_ in
          Model.push (Model.drop_n state__003_ 1) v_12__095_
      | All_ones ->
          let v_13__096_ = Model.get state__003_ 0 in
          let v_13__097_ = v_13__096_ in
          Model.push (Model.drop_n state__003_ 1) v_13__097_
    let precond cmd__172_ state__173_ =
      match cmd__172_ with
      | Create (n, b_5) -> true
      | Set (n_1, b_6) -> let v__174_ = Model.get state__173_ 0 in true
      | Get n_2 -> let v_1__175_ = Model.get state__173_ 0 in true
      | Length -> let v_2__176_ = Model.get state__173_ 0 in true
      | Equal ->
          let v1__177_ = Model.get state__173_ 0
          and v2__178_ = Model.get state__173_ 1 in true
      | Copy -> let v_3__179_ = Model.get state__173_ 0 in true
      | Append ->
          let v1_1__180_ = Model.get state__173_ 0
          and v2_1__181_ = Model.get state__173_ 1 in true
      | Sub (start, len) -> let v_4__182_ = Model.get state__173_ 0 in true
      | Fill (ofs, len_1, b_7) ->
          let v_5__183_ = Model.get state__173_ 0 in true
      | Blit (o1, o2, len_2) ->
          let v1_2__184_ = Model.get state__173_ 0
          and v2_2__185_ = Model.get state__173_ 1 in true
      | Pop -> let v_6__186_ = Model.get state__173_ 0 in true
      | Bw_and ->
          let v1_3__187_ = Model.get state__173_ 0
          and v2_3__188_ = Model.get state__173_ 1 in true
      | Bw_or ->
          let v1_4__189_ = Model.get state__173_ 0
          and v2_4__190_ = Model.get state__173_ 1 in true
      | Bw_xor ->
          let v1_5__191_ = Model.get state__173_ 0
          and v2_5__192_ = Model.get state__173_ 1 in true
      | Bw_not -> let v_7__193_ = Model.get state__173_ 0 in true
      | Shiftl n_3 -> let v_8__194_ = Model.get state__173_ 0 in true
      | Shiftr n_4 -> let v_9__195_ = Model.get state__173_ 0 in true
      | Rotatel n_5 -> let v_10__196_ = Model.get state__173_ 0 in true
      | Rotater n_6 -> let v_11__197_ = Model.get state__173_ 0 in true
      | All_zeros -> let v_12__198_ = Model.get state__173_ 0 in true
      | All_ones -> let v_13__199_ = Model.get state__173_ 0 in true
    let postcond _ _ _ = true
    let run cmd__200_ sut__201_ =
      match cmd__200_ with
      | Create (n, b_5) ->
          Res
            ((result sut exn),
              (let res__202_ = protect (fun () -> create n b_5) () in
               ((match res__202_ with
                 | Ok res -> SUT.push sut__201_ res
                 | Error _ -> ());
                res__202_)))
      | Set (n_1, b_6) ->
          Res
            ((result unit exn),
              (let v__203_ = SUT.pop sut__201_ in
               let res__204_ = protect (fun () -> set v__203_ n_1 b_6) () in
               (SUT.push sut__201_ v__203_; res__204_)))
      | Get n_2 ->
          Res
            ((result bool exn),
              (let v_1__205_ = SUT.pop sut__201_ in
               let res__206_ = protect (fun () -> get v_1__205_ n_2) () in
               (SUT.push sut__201_ v_1__205_; res__206_)))
      | Length ->
          Res
            (int,
              (let v_2__207_ = SUT.pop sut__201_ in
               let res__208_ = length v_2__207_ in
               (SUT.push sut__201_ v_2__207_; res__208_)))
      | Equal ->
          Res
            (bool,
              (let v1__209_ = SUT.pop sut__201_ in
               let v2__210_ = SUT.pop sut__201_ in
               let res__211_ = equal v1__209_ v2__210_ in
               (SUT.push sut__201_ v2__210_;
                SUT.push sut__201_ v1__209_;
                res__211_)))
      | Copy ->
          Res
            (sut,
              (let v_3__212_ = SUT.pop sut__201_ in
               let res__213_ = copy v_3__212_ in
               (SUT.push sut__201_ v_3__212_;
                SUT.push sut__201_ res__213_;
                res__213_)))
      | Append ->
          Res
            (sut,
              (let v1_1__214_ = SUT.pop sut__201_ in
               let v2_1__215_ = SUT.pop sut__201_ in
               let res__216_ = append v1_1__214_ v2_1__215_ in
               (SUT.push sut__201_ v2_1__215_;
                SUT.push sut__201_ v1_1__214_;
                SUT.push sut__201_ res__216_;
                res__216_)))
      | Sub (start, len) ->
          Res
            ((result sut exn),
              (let v_4__217_ = SUT.pop sut__201_ in
               let res__218_ = protect (fun () -> sub v_4__217_ start len) () in
               (SUT.push sut__201_ v_4__217_;
                (match res__218_ with
                 | Ok res -> SUT.push sut__201_ res
                 | Error _ -> ());
                res__218_)))
      | Fill (ofs, len_1, b_7) ->
          Res
            ((result unit exn),
              (let v_5__219_ = SUT.pop sut__201_ in
               let res__220_ =
                 protect (fun () -> fill v_5__219_ ofs len_1 b_7) () in
               (SUT.push sut__201_ v_5__219_; res__220_)))
      | Blit (o1, o2, len_2) ->
          Res
            ((result unit exn),
              (let v1_2__221_ = SUT.pop sut__201_ in
               let v2_2__222_ = SUT.pop sut__201_ in
               let res__223_ =
                 protect (fun () -> blit v1_2__221_ o1 v2_2__222_ o2 len_2)
                   () in
               (SUT.push sut__201_ v2_2__222_;
                SUT.push sut__201_ v1_2__221_;
                res__223_)))
      | Pop ->
          Res
            (int,
              (let v_6__224_ = SUT.pop sut__201_ in
               let res__225_ = pop v_6__224_ in
               (SUT.push sut__201_ v_6__224_; res__225_)))
      | Bw_and ->
          Res
            ((result sut exn),
              (let v1_3__226_ = SUT.pop sut__201_ in
               let v2_3__227_ = SUT.pop sut__201_ in
               let res__228_ =
                 protect (fun () -> bw_and v1_3__226_ v2_3__227_) () in
               (SUT.push sut__201_ v2_3__227_;
                SUT.push sut__201_ v1_3__226_;
                (match res__228_ with
                 | Ok res -> SUT.push sut__201_ res
                 | Error _ -> ());
                res__228_)))
      | Bw_or ->
          Res
            ((result sut exn),
              (let v1_4__229_ = SUT.pop sut__201_ in
               let v2_4__230_ = SUT.pop sut__201_ in
               let res__231_ =
                 protect (fun () -> bw_or v1_4__229_ v2_4__230_) () in
               (SUT.push sut__201_ v2_4__230_;
                SUT.push sut__201_ v1_4__229_;
                (match res__231_ with
                 | Ok res -> SUT.push sut__201_ res
                 | Error _ -> ());
                res__231_)))
      | Bw_xor ->
          Res
            ((result sut exn),
              (let v1_5__232_ = SUT.pop sut__201_ in
               let v2_5__233_ = SUT.pop sut__201_ in
               let res__234_ =
                 protect (fun () -> bw_xor v1_5__232_ v2_5__233_) () in
               (SUT.push sut__201_ v2_5__233_;
                SUT.push sut__201_ v1_5__232_;
                (match res__234_ with
                 | Ok res -> SUT.push sut__201_ res
                 | Error _ -> ());
                res__234_)))
      | Bw_not ->
          Res
            (sut,
              (let v_7__235_ = SUT.pop sut__201_ in
               let res__236_ = bw_not v_7__235_ in
               (SUT.push sut__201_ v_7__235_;
                SUT.push sut__201_ res__236_;
                res__236_)))
      | Shiftl n_3 ->
          Res
            (sut,
              (let v_8__237_ = SUT.pop sut__201_ in
               let res__238_ = shiftl v_8__237_ n_3 in
               (SUT.push sut__201_ v_8__237_;
                SUT.push sut__201_ res__238_;
                res__238_)))
      | Shiftr n_4 ->
          Res
            (sut,
              (let v_9__239_ = SUT.pop sut__201_ in
               let res__240_ = shiftr v_9__239_ n_4 in
               (SUT.push sut__201_ v_9__239_;
                SUT.push sut__201_ res__240_;
                res__240_)))
      | Rotatel n_5 ->
          Res
            (sut,
              (let v_10__241_ = SUT.pop sut__201_ in
               let res__242_ = rotatel v_10__241_ n_5 in
               (SUT.push sut__201_ v_10__241_;
                SUT.push sut__201_ res__242_;
                res__242_)))
      | Rotater n_6 ->
          Res
            (sut,
              (let v_11__243_ = SUT.pop sut__201_ in
               let res__244_ = rotater v_11__243_ n_6 in
               (SUT.push sut__201_ v_11__243_;
                SUT.push sut__201_ res__244_;
                res__244_)))
      | All_zeros ->
          Res
            (bool,
              (let v_12__245_ = SUT.pop sut__201_ in
               let res__246_ = all_zeros v_12__245_ in
               (SUT.push sut__201_ v_12__245_; res__246_)))
      | All_ones ->
          Res
            (bool,
              (let v_13__247_ = SUT.pop sut__201_ in
               let res__248_ = all_ones v_13__247_ in
               (SUT.push sut__201_ v_13__247_; res__248_)))
  end
module STMTests = (Ortac_runtime.Make)(Spec)
let check_init_state () = ()
let ortac_show_cmd cmd__250_ state__251_ last__253_ res__252_ =
  let open Spec in
    let open STM in
      match (cmd__250_, res__252_) with
      | (Create (n, b_5), Res ((Result (SUT, Exn), _), t_1)) ->
          let lhs =
            if last__253_
            then "r"
            else
              (match t_1 with
               | Ok _ -> "Ok " ^ (SUT.get_name state__251_ 0)
               | Error _ -> "_")
          and shift = match t_1 with | Ok _ -> 1 | Error _ -> 0 in
          Format.asprintf "let %s = protect (fun () -> %s %a %a)" lhs
            "create" (Util.Pp.pp_int true) n (Util.Pp.pp_bool true) b_5
      | (Set (n_1, b_6), Res ((Result (Unit, Exn), _), _)) ->
          let lhs = if last__253_ then "r" else "_"
          and shift = 0 in
          Format.asprintf "let %s = protect (fun () -> %s %s %a %a)" lhs
            "set" (SUT.get_name state__251_ (0 + shift))
            (Util.Pp.pp_int true) n_1 (Util.Pp.pp_bool true) b_6
      | (Get n_2, Res ((Result (Bool, Exn), _), _)) ->
          let lhs = if last__253_ then "r" else "_"
          and shift = 0 in
          Format.asprintf "let %s = protect (fun () -> %s %s %a)" lhs "get"
            (SUT.get_name state__251_ (0 + shift)) (Util.Pp.pp_int true) n_2
      | (Length, Res ((Int, _), _)) ->
          let lhs = if last__253_ then "r" else "_"
          and shift = 0 in
          Format.asprintf "let %s = %s %s" lhs "length"
            (SUT.get_name state__251_ (0 + shift))
      | (Equal, Res ((Bool, _), _)) ->
          let lhs = if last__253_ then "r" else "_"
          and shift = 0 in
          Format.asprintf "let %s = %s %s %s" lhs "equal"
            (SUT.get_name state__251_ (0 + shift))
            (SUT.get_name state__251_ (1 + shift))
      | (Copy, Res ((SUT, _), r)) ->
          let lhs = if last__253_ then "r" else SUT.get_name state__251_ 0
          and shift = 1 in
          Format.asprintf "let %s = %s %s" lhs "copy"
            (SUT.get_name state__251_ (0 + shift))
      | (Append, Res ((SUT, _), r_1)) ->
          let lhs = if last__253_ then "r" else SUT.get_name state__251_ 0
          and shift = 1 in
          Format.asprintf "let %s = %s %s %s" lhs "append"
            (SUT.get_name state__251_ (0 + shift))
            (SUT.get_name state__251_ (1 + shift))
      | (Sub (start, len), Res ((Result (SUT, Exn), _), r_2)) ->
          let lhs =
            if last__253_
            then "r"
            else
              (match r_2 with
               | Ok _ -> "Ok " ^ (SUT.get_name state__251_ 0)
               | Error _ -> "_")
          and shift = match r_2 with | Ok _ -> 1 | Error _ -> 0 in
          Format.asprintf "let %s = protect (fun () -> %s %s %a %a)" lhs
            "sub" (SUT.get_name state__251_ (0 + shift))
            (Util.Pp.pp_int true) start (Util.Pp.pp_int true) len
      | (Fill (ofs, len_1, b_7), Res ((Result (Unit, Exn), _), _)) ->
          let lhs = if last__253_ then "r" else "_"
          and shift = 0 in
          Format.asprintf "let %s = protect (fun () -> %s %s %a %a %a)" lhs
            "fill" (SUT.get_name state__251_ (0 + shift))
            (Util.Pp.pp_int true) ofs (Util.Pp.pp_int true) len_1
            (Util.Pp.pp_bool true) b_7
      | (Blit (o1, o2, len_2), Res ((Result (Unit, Exn), _), _)) ->
          let lhs = if last__253_ then "r" else "_"
          and shift = 0 in
          Format.asprintf "let %s = protect (fun () -> %s %s %a %s %a %a)"
            lhs "blit" (SUT.get_name state__251_ (0 + shift))
            (Util.Pp.pp_int true) o1 (SUT.get_name state__251_ (1 + shift))
            (Util.Pp.pp_int true) o2 (Util.Pp.pp_int true) len_2
      | (Pop, Res ((Int, _), _)) ->
          let lhs = if last__253_ then "r" else "_"
          and shift = 0 in
          Format.asprintf "let %s = %s %s" lhs "pop"
            (SUT.get_name state__251_ (0 + shift))
      | (Bw_and, Res ((Result (SUT, Exn), _), r_3)) ->
          let lhs =
            if last__253_
            then "r"
            else
              (match r_3 with
               | Ok _ -> "Ok " ^ (SUT.get_name state__251_ 0)
               | Error _ -> "_")
          and shift = match r_3 with | Ok _ -> 1 | Error _ -> 0 in
          Format.asprintf "let %s = protect (fun () -> %s %s %s)" lhs
            "bw_and" (SUT.get_name state__251_ (0 + shift))
            (SUT.get_name state__251_ (1 + shift))
      | (Bw_or, Res ((Result (SUT, Exn), _), r_4)) ->
          let lhs =
            if last__253_
            then "r"
            else
              (match r_4 with
               | Ok _ -> "Ok " ^ (SUT.get_name state__251_ 0)
               | Error _ -> "_")
          and shift = match r_4 with | Ok _ -> 1 | Error _ -> 0 in
          Format.asprintf "let %s = protect (fun () -> %s %s %s)" lhs "bw_or"
            (SUT.get_name state__251_ (0 + shift))
            (SUT.get_name state__251_ (1 + shift))
      | (Bw_xor, Res ((Result (SUT, Exn), _), r_5)) ->
          let lhs =
            if last__253_
            then "r"
            else
              (match r_5 with
               | Ok _ -> "Ok " ^ (SUT.get_name state__251_ 0)
               | Error _ -> "_")
          and shift = match r_5 with | Ok _ -> 1 | Error _ -> 0 in
          Format.asprintf "let %s = protect (fun () -> %s %s %s)" lhs
            "bw_xor" (SUT.get_name state__251_ (0 + shift))
            (SUT.get_name state__251_ (1 + shift))
      | (Bw_not, Res ((SUT, _), r_6)) ->
          let lhs = if last__253_ then "r" else SUT.get_name state__251_ 0
          and shift = 1 in
          Format.asprintf "let %s = %s %s" lhs "bw_not"
            (SUT.get_name state__251_ (0 + shift))
      | (Shiftl n_3, Res ((SUT, _), r_7)) ->
          let lhs = if last__253_ then "r" else SUT.get_name state__251_ 0
          and shift = 1 in
          Format.asprintf "let %s = %s %s %a" lhs "shiftl"
            (SUT.get_name state__251_ (0 + shift)) (Util.Pp.pp_int true) n_3
      | (Shiftr n_4, Res ((SUT, _), r_8)) ->
          let lhs = if last__253_ then "r" else SUT.get_name state__251_ 0
          and shift = 1 in
          Format.asprintf "let %s = %s %s %a" lhs "shiftr"
            (SUT.get_name state__251_ (0 + shift)) (Util.Pp.pp_int true) n_4
      | (Rotatel n_5, Res ((SUT, _), r_9)) ->
          let lhs = if last__253_ then "r" else SUT.get_name state__251_ 0
          and shift = 1 in
          Format.asprintf "let %s = %s %s %a" lhs "rotatel"
            (SUT.get_name state__251_ (0 + shift)) (Util.Pp.pp_int true) n_5
      | (Rotater n_6, Res ((SUT, _), r_10)) ->
          let lhs = if last__253_ then "r" else SUT.get_name state__251_ 0
          and shift = 1 in
          Format.asprintf "let %s = %s %s %a" lhs "rotater"
            (SUT.get_name state__251_ (0 + shift)) (Util.Pp.pp_int true) n_6
      | (All_zeros, Res ((Bool, _), _)) ->
          let lhs = if last__253_ then "r" else "_"
          and shift = 0 in
          Format.asprintf "let %s = %s %s" lhs "all_zeros"
            (SUT.get_name state__251_ (0 + shift))
      | (All_ones, Res ((Bool, _), _)) ->
          let lhs = if last__253_ then "r" else "_"
          and shift = 0 in
          Format.asprintf "let %s = %s %s" lhs "all_ones"
            (SUT.get_name state__251_ (0 + shift))
      | _ -> assert false
let ortac_postcond cmd__098_ state__099_ res__100_ =
  let open Spec in
    let open STM in
      let new_state__101_ = lazy (next_state cmd__098_ state__099_) in
      match (cmd__098_, res__100_) with
      | (Create (n, b_5), Res ((Result (SUT, Exn), _), t_1)) ->
          (match if
                   try
                     Ortac_runtime.Gospelstdlib.(>=)
                       (Ortac_runtime.Gospelstdlib.integer_of_int n)
                       (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 49;
                                    pos_bol = 3486;
                                    pos_cnum = 3505
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 49;
                                    pos_bol = 3486;
                                    pos_cnum = 3511
                                  }
                              }))
                 then None
                 else
                   Some
                     (Ortac_runtime.report "Bitv_spec" "create 8 false"
                        (Either.left "Invalid_argument") "create"
                        [("n >= 0",
                           {
                             Ortac_runtime.start =
                               {
                                 pos_fname = "bitv_spec.mli";
                                 pos_lnum = 49;
                                 pos_bol = 3486;
                                 pos_cnum = 3505
                               };
                             Ortac_runtime.stop =
                               {
                                 pos_fname = "bitv_spec.mli";
                                 pos_lnum = 49;
                                 pos_bol = 3486;
                                 pos_cnum = 3511
                               }
                           })])
           with
           | None -> (match t_1 with | Ok t_1 -> None | _ -> None)
           | _ ->
               (match t_1 with
                | Error (Invalid_argument _) -> None
                | _ ->
                    if
                      (try
                         Ortac_runtime.Gospelstdlib.(>=)
                           (Ortac_runtime.Gospelstdlib.integer_of_int n)
                           (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                       with
                       | e ->
                           raise
                             (Ortac_runtime.Partial_function
                                (e,
                                  {
                                    Ortac_runtime.start =
                                      {
                                        pos_fname = "bitv_spec.mli";
                                        pos_lnum = 49;
                                        pos_bol = 3486;
                                        pos_cnum = 3505
                                      };
                                    Ortac_runtime.stop =
                                      {
                                        pos_fname = "bitv_spec.mli";
                                        pos_lnum = 49;
                                        pos_bol = 3486;
                                        pos_cnum = 3511
                                      }
                                  })))
                    then None
                    else
                      Some
                        (Ortac_runtime.report "Bitv_spec" "create 8 false"
                           (Either.left "Invalid_argument") "create"
                           [("n >= 0",
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 49;
                                    pos_bol = 3486;
                                    pos_cnum = 3505
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 49;
                                    pos_bol = 3486;
                                    pos_cnum = 3511
                                  }
                              })])))
      | (Set (n_1, b_6), Res ((Result (Unit, Exn), _), res)) ->
          (match if
                   let tmp__102_ = Model.get state__099_ 0 in
                   try
                     let __t1__103_ =
                       Ortac_runtime.Gospelstdlib.(<=)
                         (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                         (Ortac_runtime.Gospelstdlib.integer_of_int n_1) in
                     let __t2__104_ =
                       Ortac_runtime.Gospelstdlib.(<)
                         (Ortac_runtime.Gospelstdlib.integer_of_int n_1)
                         tmp__102_.size in
                     __t1__103_ && __t2__104_
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 60;
                                    pos_bol = 4209;
                                    pos_cnum = 4228
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 60;
                                    pos_bol = 4209;
                                    pos_cnum = 4243
                                  }
                              }))
                 then None
                 else
                   Some
                     (Ortac_runtime.report "Bitv_spec" "create 8 false"
                        (Either.left "Invalid_argument") "set"
                        [("0 <= n < v.size",
                           {
                             Ortac_runtime.start =
                               {
                                 pos_fname = "bitv_spec.mli";
                                 pos_lnum = 60;
                                 pos_bol = 4209;
                                 pos_cnum = 4228
                               };
                             Ortac_runtime.stop =
                               {
                                 pos_fname = "bitv_spec.mli";
                                 pos_lnum = 60;
                                 pos_bol = 4209;
                                 pos_cnum = 4243
                               }
                           })])
           with
           | None -> (match res with | Ok _ -> None | _ -> None)
           | _ ->
               (match res with
                | Error (Invalid_argument _) -> None
                | _ ->
                    if
                      let tmp__102_ = Model.get state__099_ 0 in
                      (try
                         let __t1__103_ =
                           Ortac_runtime.Gospelstdlib.(<=)
                             (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                             (Ortac_runtime.Gospelstdlib.integer_of_int n_1) in
                         let __t2__104_ =
                           Ortac_runtime.Gospelstdlib.(<)
                             (Ortac_runtime.Gospelstdlib.integer_of_int n_1)
                             tmp__102_.size in
                         __t1__103_ && __t2__104_
                       with
                       | e ->
                           raise
                             (Ortac_runtime.Partial_function
                                (e,
                                  {
                                    Ortac_runtime.start =
                                      {
                                        pos_fname = "bitv_spec.mli";
                                        pos_lnum = 60;
                                        pos_bol = 4209;
                                        pos_cnum = 4228
                                      };
                                    Ortac_runtime.stop =
                                      {
                                        pos_fname = "bitv_spec.mli";
                                        pos_lnum = 60;
                                        pos_bol = 4209;
                                        pos_cnum = 4243
                                      }
                                  })))
                    then None
                    else
                      Some
                        (Ortac_runtime.report "Bitv_spec" "create 8 false"
                           (Either.left "Invalid_argument") "set"
                           [("0 <= n < v.size",
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 60;
                                    pos_bol = 4209;
                                    pos_cnum = 4228
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 60;
                                    pos_bol = 4209;
                                    pos_cnum = 4243
                                  }
                              })])))
      | (Get n_2, Res ((Result (Bool, Exn), _), r_11)) ->
          (match if
                   let tmp__109_ = Model.get state__099_ 0 in
                   try
                     let __t1__110_ =
                       Ortac_runtime.Gospelstdlib.(<=)
                         (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                         (Ortac_runtime.Gospelstdlib.integer_of_int n_2) in
                     let __t2__111_ =
                       Ortac_runtime.Gospelstdlib.(<)
                         (Ortac_runtime.Gospelstdlib.integer_of_int n_2)
                         tmp__109_.size in
                     __t1__110_ && __t2__111_
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 67;
                                    pos_bol = 4711;
                                    pos_cnum = 4730
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 67;
                                    pos_bol = 4711;
                                    pos_cnum = 4745
                                  }
                              }))
                 then None
                 else
                   Some
                     (Ortac_runtime.report "Bitv_spec" "create 8 false"
                        (Either.left "Invalid_argument") "get"
                        [("0 <= n < v.size",
                           {
                             Ortac_runtime.start =
                               {
                                 pos_fname = "bitv_spec.mli";
                                 pos_lnum = 67;
                                 pos_bol = 4711;
                                 pos_cnum = 4730
                               };
                             Ortac_runtime.stop =
                               {
                                 pos_fname = "bitv_spec.mli";
                                 pos_lnum = 67;
                                 pos_bol = 4711;
                                 pos_cnum = 4745
                               }
                           })])
           with
           | None ->
               (match r_11 with
                | Ok r_11 ->
                    if
                      let v_old__107_ = Model.get state__099_ 0
                      and v_new__108_ =
                        lazy (Model.get (Lazy.force new_state__101_) 0) in
                      (try
                         r_11 =
                           (Ortac_runtime.Gospelstdlib.__mix_Bub
                              (Lazy.force v_new__108_).bits_1
                              (Ortac_runtime.Gospelstdlib.integer_of_int n_2))
                       with
                       | e ->
                           raise
                             (Ortac_runtime.Partial_function
                                (e,
                                  {
                                    Ortac_runtime.start =
                                      {
                                        pos_fname = "bitv_spec.mli";
                                        pos_lnum = 68;
                                        pos_bol = 4746;
                                        pos_cnum = 4766
                                      };
                                    Ortac_runtime.stop =
                                      {
                                        pos_fname = "bitv_spec.mli";
                                        pos_lnum = 68;
                                        pos_bol = 4746;
                                        pos_cnum = 4779
                                      }
                                  })))
                    then None
                    else
                      Some
                        (Ortac_runtime.report "Bitv_spec" "create 8 false"
                           (Either.right
                              (Res
                                 (bool,
                                   (let v_old__105_ = Model.get state__099_ 0
                                    and v_new__106_ =
                                      lazy
                                        (Model.get
                                           (Lazy.force new_state__101_) 0) in
                                    try
                                      Ortac_runtime.Gospelstdlib.__mix_Bub
                                        (Lazy.force v_new__106_).bits_1
                                        (Ortac_runtime.Gospelstdlib.integer_of_int
                                           n_2)
                                    with
                                    | e ->
                                        raise
                                          (Ortac_runtime.Partial_function
                                             (e,
                                               {
                                                 Ortac_runtime.start =
                                                   {
                                                     pos_fname =
                                                       "bitv_spec.mli";
                                                     pos_lnum = 68;
                                                     pos_bol = 4746;
                                                     pos_cnum = 4776
                                                   };
                                                 Ortac_runtime.stop =
                                                   {
                                                     pos_fname =
                                                       "bitv_spec.mli";
                                                     pos_lnum = 68;
                                                     pos_bol = 4746;
                                                     pos_cnum = 4777
                                                   }
                                               })))))) "get"
                           [("r = v.bits[n]",
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 68;
                                    pos_bol = 4746;
                                    pos_cnum = 4766
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 68;
                                    pos_bol = 4746;
                                    pos_cnum = 4779
                                  }
                              })])
                | _ -> None)
           | _ ->
               (match r_11 with
                | Error (Invalid_argument _) -> None
                | _ ->
                    if
                      let tmp__109_ = Model.get state__099_ 0 in
                      (try
                         let __t1__110_ =
                           Ortac_runtime.Gospelstdlib.(<=)
                             (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                             (Ortac_runtime.Gospelstdlib.integer_of_int n_2) in
                         let __t2__111_ =
                           Ortac_runtime.Gospelstdlib.(<)
                             (Ortac_runtime.Gospelstdlib.integer_of_int n_2)
                             tmp__109_.size in
                         __t1__110_ && __t2__111_
                       with
                       | e ->
                           raise
                             (Ortac_runtime.Partial_function
                                (e,
                                  {
                                    Ortac_runtime.start =
                                      {
                                        pos_fname = "bitv_spec.mli";
                                        pos_lnum = 67;
                                        pos_bol = 4711;
                                        pos_cnum = 4730
                                      };
                                    Ortac_runtime.stop =
                                      {
                                        pos_fname = "bitv_spec.mli";
                                        pos_lnum = 67;
                                        pos_bol = 4711;
                                        pos_cnum = 4745
                                      }
                                  })))
                    then None
                    else
                      Some
                        (Ortac_runtime.report "Bitv_spec" "create 8 false"
                           (Either.left "Invalid_argument") "get"
                           [("0 <= n < v.size",
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 67;
                                    pos_bol = 4711;
                                    pos_cnum = 4730
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 67;
                                    pos_bol = 4711;
                                    pos_cnum = 4745
                                  }
                              })])))
      | (Length, Res ((Int, _), r_12)) ->
          if
            let v_old__114_ = Model.get state__099_ 0
            and v_new__115_ = lazy (Model.get (Lazy.force new_state__101_) 0) in
            (try
               (Ortac_runtime.Gospelstdlib.integer_of_int r_12) =
                 (Lazy.force v_new__115_).size
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "bitv_spec.mli";
                              pos_lnum = 74;
                              pos_bol = 5132;
                              pos_cnum = 5152
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "bitv_spec.mli";
                              pos_lnum = 74;
                              pos_bol = 5132;
                              pos_cnum = 5162
                            }
                        })))
          then None
          else
            Some
              (Ortac_runtime.report "Bitv_spec" "create 8 false"
                 (Either.right
                    (Res
                       (integer,
                         (let v_old__112_ = Model.get state__099_ 0
                          and v_new__113_ =
                            lazy (Model.get (Lazy.force new_state__101_) 0) in
                          try (Lazy.force v_new__113_).size
                          with
                          | e ->
                              raise
                                (Ortac_runtime.Partial_function
                                   (e,
                                     {
                                       Ortac_runtime.start =
                                         {
                                           pos_fname = "bitv_spec.mli";
                                           pos_lnum = 74;
                                           pos_bol = 5132;
                                           pos_cnum = 5156
                                         };
                                       Ortac_runtime.stop =
                                         {
                                           pos_fname = "bitv_spec.mli";
                                           pos_lnum = 74;
                                           pos_bol = 5132;
                                           pos_cnum = 5162
                                         }
                                     })))))) "length"
                 [("r = v.size",
                    {
                      Ortac_runtime.start =
                        {
                          pos_fname = "bitv_spec.mli";
                          pos_lnum = 74;
                          pos_bol = 5132;
                          pos_cnum = 5152
                        };
                      Ortac_runtime.stop =
                        {
                          pos_fname = "bitv_spec.mli";
                          pos_lnum = 74;
                          pos_bol = 5132;
                          pos_cnum = 5162
                        }
                    })])
      | (Equal, Res ((Bool, _), r_13)) ->
          if
            let v2_old__123_ = Model.get state__099_ 1
            and v2_new__124_ =
              lazy (Model.get (Lazy.force new_state__101_) 1)
            and v1_old__121_ = Model.get state__099_ 0
            and v1_new__122_ =
              lazy (Model.get (Lazy.force new_state__101_) 0) in
            (try
               r_13 =
                 (if
                    not
                      ((Lazy.force v1_new__122_).size =
                         (Lazy.force v2_new__124_).size)
                  then false
                  else
                    Ortac_runtime.Gospelstdlib.Sequence.fold_left
                      (fun a_5 ->
                         fun b_8 ->
                           if (a_5 = true) && (b_8 = true)
                           then true
                           else false) true
                      (Ortac_runtime.Gospelstdlib.Sequence.init
                         (Lazy.force v1_new__122_).size
                         (fun i_2 ->
                            if
                              (Ortac_runtime.Gospelstdlib.__mix_Bub
                                 (Lazy.force v1_new__122_).bits_1 i_2)
                                = true
                            then
                              (if
                                 (Ortac_runtime.Gospelstdlib.__mix_Bub
                                    (Lazy.force v2_new__124_).bits_1 i_2)
                                   = true
                               then true
                               else false)
                            else
                              if
                                (Ortac_runtime.Gospelstdlib.__mix_Bub
                                   (Lazy.force v2_new__124_).bits_1 i_2)
                                  = true
                              then false
                              else true)))
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "bitv_spec.mli";
                              pos_lnum = 80;
                              pos_bol = 5538;
                              pos_cnum = 5558
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "bitv_spec.mli";
                              pos_lnum = 90;
                              pos_bol = 5949;
                              pos_cnum = 6017
                            }
                        })))
          then None
          else
            Some
              (Ortac_runtime.report "Bitv_spec" "create 8 false"
                 (Either.right
                    (Res
                       (bool,
                         (let v2_old__119_ = Model.get state__099_ 1
                          and v2_new__120_ =
                            lazy (Model.get (Lazy.force new_state__101_) 1)
                          and v1_old__117_ = Model.get state__099_ 0
                          and v1_new__118_ =
                            lazy (Model.get (Lazy.force new_state__101_) 0) in
                          try
                            if
                              not
                                ((Lazy.force v1_new__118_).size =
                                   (Lazy.force v2_new__120_).size)
                            then false
                            else
                              Ortac_runtime.Gospelstdlib.Sequence.fold_left
                                (fun a_5 ->
                                   fun b_8 ->
                                     if (a_5 = true) && (b_8 = true)
                                     then true
                                     else false) true
                                (Ortac_runtime.Gospelstdlib.Sequence.init
                                   (Lazy.force v1_new__118_).size
                                   (fun i_2 ->
                                      if
                                        (Ortac_runtime.Gospelstdlib.__mix_Bub
                                           (Lazy.force v1_new__118_).bits_1
                                           i_2)
                                          = true
                                      then
                                        (if
                                           (Ortac_runtime.Gospelstdlib.__mix_Bub
                                              (Lazy.force v2_new__120_).bits_1
                                              i_2)
                                             = true
                                         then true
                                         else false)
                                      else
                                        if
                                          (Ortac_runtime.Gospelstdlib.__mix_Bub
                                             (Lazy.force v2_new__120_).bits_1
                                             i_2)
                                            = true
                                        then false
                                        else true))
                          with
                          | e ->
                              raise
                                (Ortac_runtime.Partial_function
                                   (e,
                                     {
                                       Ortac_runtime.start =
                                         {
                                           pos_fname = "bitv_spec.mli";
                                           pos_lnum = 81;
                                           pos_bol = 5562;
                                           pos_cnum = 5578
                                         };
                                       Ortac_runtime.stop =
                                         {
                                           pos_fname = "bitv_spec.mli";
                                           pos_lnum = 90;
                                           pos_bol = 5949;
                                           pos_cnum = 6017
                                         }
                                     })))))) "equal"
                 [("r =\n                if v1.size <> v2.size then false\n                else\n                    Sequence.fold_left\n                        ( fun a b -> a && b)\n                        true\n                        (Sequence.init v1.size (fun i ->\n                            if v1.bits[i] then\n                                if v2.bits[i] then true else false\n                            else\n                                if v2.bits[i] then false else true))",
                    {
                      Ortac_runtime.start =
                        {
                          pos_fname = "bitv_spec.mli";
                          pos_lnum = 80;
                          pos_bol = 5538;
                          pos_cnum = 5558
                        };
                      Ortac_runtime.stop =
                        {
                          pos_fname = "bitv_spec.mli";
                          pos_lnum = 90;
                          pos_bol = 5949;
                          pos_cnum = 6017
                        }
                    })])
      | (Copy, Res ((SUT, _), r)) -> None
      | (Append, Res ((SUT, _), r_1)) -> None
      | (Sub (start, len), Res ((Result (SUT, Exn), _), r_2)) ->
          (match Ortac_runtime.append
                   (if
                      let tmp__130_ = Model.get state__099_ 0 in
                      try
                        let __t1__131_ =
                          Ortac_runtime.Gospelstdlib.(<=)
                            (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                            (Ortac_runtime.Gospelstdlib.integer_of_int len) in
                        let __t2__132_ =
                          Ortac_runtime.Gospelstdlib.(<=)
                            (Ortac_runtime.Gospelstdlib.integer_of_int len)
                            tmp__130_.size in
                        __t1__131_ && __t2__132_
                      with
                      | e ->
                          raise
                            (Ortac_runtime.Partial_function
                               (e,
                                 {
                                   Ortac_runtime.start =
                                     {
                                       pos_fname = "bitv_spec.mli";
                                       pos_lnum = 137;
                                       pos_bol = 8715;
                                       pos_cnum = 8734
                                     };
                                   Ortac_runtime.stop =
                                     {
                                       pos_fname = "bitv_spec.mli";
                                       pos_lnum = 137;
                                       pos_bol = 8715;
                                       pos_cnum = 8752
                                     }
                                 }))
                    then None
                    else
                      Some
                        (Ortac_runtime.report "Bitv_spec" "create 8 false"
                           (Either.left "Invalid_argument") "sub"
                           [("0 <= len <= v.size",
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 137;
                                    pos_bol = 8715;
                                    pos_cnum = 8734
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 137;
                                    pos_bol = 8715;
                                    pos_cnum = 8752
                                  }
                              })]))
                   (if
                      let tmp__130_ = Model.get state__099_ 0 in
                      try
                        let __t1__133_ =
                          Ortac_runtime.Gospelstdlib.(<=)
                            (Ortac_runtime.Gospelstdlib.integer_of_int len)
                            (Ortac_runtime.Gospelstdlib.(+)
                               (Ortac_runtime.Gospelstdlib.integer_of_int len)
                               (Ortac_runtime.Gospelstdlib.integer_of_int
                                  start)) in
                        let __t2__134_ =
                          Ortac_runtime.Gospelstdlib.(<=)
                            (Ortac_runtime.Gospelstdlib.(+)
                               (Ortac_runtime.Gospelstdlib.integer_of_int len)
                               (Ortac_runtime.Gospelstdlib.integer_of_int
                                  start)) tmp__130_.size in
                        __t1__133_ && __t2__134_
                      with
                      | e ->
                          raise
                            (Ortac_runtime.Partial_function
                               (e,
                                 {
                                   Ortac_runtime.start =
                                     {
                                       pos_fname = "bitv_spec.mli";
                                       pos_lnum = 138;
                                       pos_bol = 8753;
                                       pos_cnum = 8772
                                     };
                                   Ortac_runtime.stop =
                                     {
                                       pos_fname = "bitv_spec.mli";
                                       pos_lnum = 138;
                                       pos_bol = 8753;
                                       pos_cnum = 8800
                                     }
                                 }))
                    then None
                    else
                      Some
                        (Ortac_runtime.report "Bitv_spec" "create 8 false"
                           (Either.left "Invalid_argument") "sub"
                           [("len <= len + start <= v.size",
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 138;
                                    pos_bol = 8753;
                                    pos_cnum = 8772
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 138;
                                    pos_bol = 8753;
                                    pos_cnum = 8800
                                  }
                              })]))
           with
           | None -> (match r_2 with | Ok r_2 -> None | _ -> None)
           | _ ->
               (match r_2 with
                | Error (Invalid_argument _) -> None
                | _ ->
                    Ortac_runtime.append
                      (if
                         let tmp__130_ = Model.get state__099_ 0 in
                         try
                           let __t1__131_ =
                             Ortac_runtime.Gospelstdlib.(<=)
                               (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                               (Ortac_runtime.Gospelstdlib.integer_of_int len) in
                           let __t2__132_ =
                             Ortac_runtime.Gospelstdlib.(<=)
                               (Ortac_runtime.Gospelstdlib.integer_of_int len)
                               tmp__130_.size in
                           __t1__131_ && __t2__132_
                         with
                         | e ->
                             raise
                               (Ortac_runtime.Partial_function
                                  (e,
                                    {
                                      Ortac_runtime.start =
                                        {
                                          pos_fname = "bitv_spec.mli";
                                          pos_lnum = 137;
                                          pos_bol = 8715;
                                          pos_cnum = 8734
                                        };
                                      Ortac_runtime.stop =
                                        {
                                          pos_fname = "bitv_spec.mli";
                                          pos_lnum = 137;
                                          pos_bol = 8715;
                                          pos_cnum = 8752
                                        }
                                    }))
                       then None
                       else
                         Some
                           (Ortac_runtime.report "Bitv_spec" "create 8 false"
                              (Either.left "Invalid_argument") "sub"
                              [("0 <= len <= v.size",
                                 {
                                   Ortac_runtime.start =
                                     {
                                       pos_fname = "bitv_spec.mli";
                                       pos_lnum = 137;
                                       pos_bol = 8715;
                                       pos_cnum = 8734
                                     };
                                   Ortac_runtime.stop =
                                     {
                                       pos_fname = "bitv_spec.mli";
                                       pos_lnum = 137;
                                       pos_bol = 8715;
                                       pos_cnum = 8752
                                     }
                                 })]))
                      (if
                         let tmp__130_ = Model.get state__099_ 0 in
                         try
                           let __t1__133_ =
                             Ortac_runtime.Gospelstdlib.(<=)
                               (Ortac_runtime.Gospelstdlib.integer_of_int len)
                               (Ortac_runtime.Gospelstdlib.(+)
                                  (Ortac_runtime.Gospelstdlib.integer_of_int
                                     len)
                                  (Ortac_runtime.Gospelstdlib.integer_of_int
                                     start)) in
                           let __t2__134_ =
                             Ortac_runtime.Gospelstdlib.(<=)
                               (Ortac_runtime.Gospelstdlib.(+)
                                  (Ortac_runtime.Gospelstdlib.integer_of_int
                                     len)
                                  (Ortac_runtime.Gospelstdlib.integer_of_int
                                     start)) tmp__130_.size in
                           __t1__133_ && __t2__134_
                         with
                         | e ->
                             raise
                               (Ortac_runtime.Partial_function
                                  (e,
                                    {
                                      Ortac_runtime.start =
                                        {
                                          pos_fname = "bitv_spec.mli";
                                          pos_lnum = 138;
                                          pos_bol = 8753;
                                          pos_cnum = 8772
                                        };
                                      Ortac_runtime.stop =
                                        {
                                          pos_fname = "bitv_spec.mli";
                                          pos_lnum = 138;
                                          pos_bol = 8753;
                                          pos_cnum = 8800
                                        }
                                    }))
                       then None
                       else
                         Some
                           (Ortac_runtime.report "Bitv_spec" "create 8 false"
                              (Either.left "Invalid_argument") "sub"
                              [("len <= len + start <= v.size",
                                 {
                                   Ortac_runtime.start =
                                     {
                                       pos_fname = "bitv_spec.mli";
                                       pos_lnum = 138;
                                       pos_bol = 8753;
                                       pos_cnum = 8772
                                     };
                                   Ortac_runtime.stop =
                                     {
                                       pos_fname = "bitv_spec.mli";
                                       pos_lnum = 138;
                                       pos_bol = 8753;
                                       pos_cnum = 8800
                                     }
                                 })]))))
      | (Fill (ofs, len_1, b_7), Res ((Result (Unit, Exn), _), res)) ->
          (match Ortac_runtime.append
                   (if
                      let tmp__135_ = Model.get state__099_ 0 in
                      try
                        Ortac_runtime.Gospelstdlib.(<=)
                          (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                          (Ortac_runtime.Gospelstdlib.integer_of_int ofs)
                      with
                      | e ->
                          raise
                            (Ortac_runtime.Partial_function
                               (e,
                                 {
                                   Ortac_runtime.start =
                                     {
                                       pos_fname = "bitv_spec.mli";
                                       pos_lnum = 148;
                                       pos_bol = 9549;
                                       pos_cnum = 9568
                                     };
                                   Ortac_runtime.stop =
                                     {
                                       pos_fname = "bitv_spec.mli";
                                       pos_lnum = 148;
                                       pos_bol = 9549;
                                       pos_cnum = 9576
                                     }
                                 }))
                    then None
                    else
                      Some
                        (Ortac_runtime.report "Bitv_spec" "create 8 false"
                           (Either.left "Invalid_argument") "fill"
                           [("0 <= ofs",
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 148;
                                    pos_bol = 9549;
                                    pos_cnum = 9568
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 148;
                                    pos_bol = 9549;
                                    pos_cnum = 9576
                                  }
                              })]))
                   (Ortac_runtime.append
                      (if
                         let tmp__135_ = Model.get state__099_ 0 in
                         try
                           Ortac_runtime.Gospelstdlib.(<=)
                             (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                             (Ortac_runtime.Gospelstdlib.integer_of_int len_1)
                         with
                         | e ->
                             raise
                               (Ortac_runtime.Partial_function
                                  (e,
                                    {
                                      Ortac_runtime.start =
                                        {
                                          pos_fname = "bitv_spec.mli";
                                          pos_lnum = 149;
                                          pos_bol = 9577;
                                          pos_cnum = 9596
                                        };
                                      Ortac_runtime.stop =
                                        {
                                          pos_fname = "bitv_spec.mli";
                                          pos_lnum = 149;
                                          pos_bol = 9577;
                                          pos_cnum = 9604
                                        }
                                    }))
                       then None
                       else
                         Some
                           (Ortac_runtime.report "Bitv_spec" "create 8 false"
                              (Either.left "Invalid_argument") "fill"
                              [("0 <= len",
                                 {
                                   Ortac_runtime.start =
                                     {
                                       pos_fname = "bitv_spec.mli";
                                       pos_lnum = 149;
                                       pos_bol = 9577;
                                       pos_cnum = 9596
                                     };
                                   Ortac_runtime.stop =
                                     {
                                       pos_fname = "bitv_spec.mli";
                                       pos_lnum = 149;
                                       pos_bol = 9577;
                                       pos_cnum = 9604
                                     }
                                 })]))
                      (if
                         let tmp__135_ = Model.get state__099_ 0 in
                         try
                           Ortac_runtime.Gospelstdlib.(<=)
                             (Ortac_runtime.Gospelstdlib.(+)
                                (Ortac_runtime.Gospelstdlib.integer_of_int
                                   ofs)
                                (Ortac_runtime.Gospelstdlib.integer_of_int
                                   len_1)) tmp__135_.size
                         with
                         | e ->
                             raise
                               (Ortac_runtime.Partial_function
                                  (e,
                                    {
                                      Ortac_runtime.start =
                                        {
                                          pos_fname = "bitv_spec.mli";
                                          pos_lnum = 150;
                                          pos_bol = 9605;
                                          pos_cnum = 9624
                                        };
                                      Ortac_runtime.stop =
                                        {
                                          pos_fname = "bitv_spec.mli";
                                          pos_lnum = 150;
                                          pos_bol = 9605;
                                          pos_cnum = 9643
                                        }
                                    }))
                       then None
                       else
                         Some
                           (Ortac_runtime.report "Bitv_spec" "create 8 false"
                              (Either.left "Invalid_argument") "fill"
                              [("ofs + len <= v.size",
                                 {
                                   Ortac_runtime.start =
                                     {
                                       pos_fname = "bitv_spec.mli";
                                       pos_lnum = 150;
                                       pos_bol = 9605;
                                       pos_cnum = 9624
                                     };
                                   Ortac_runtime.stop =
                                     {
                                       pos_fname = "bitv_spec.mli";
                                       pos_lnum = 150;
                                       pos_bol = 9605;
                                       pos_cnum = 9643
                                     }
                                 })])))
           with
           | None -> (match res with | Ok _ -> None | _ -> None)
           | _ ->
               (match res with
                | Error (Invalid_argument _) -> None
                | _ ->
                    Ortac_runtime.append
                      (if
                         let tmp__135_ = Model.get state__099_ 0 in
                         try
                           Ortac_runtime.Gospelstdlib.(<=)
                             (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                             (Ortac_runtime.Gospelstdlib.integer_of_int ofs)
                         with
                         | e ->
                             raise
                               (Ortac_runtime.Partial_function
                                  (e,
                                    {
                                      Ortac_runtime.start =
                                        {
                                          pos_fname = "bitv_spec.mli";
                                          pos_lnum = 148;
                                          pos_bol = 9549;
                                          pos_cnum = 9568
                                        };
                                      Ortac_runtime.stop =
                                        {
                                          pos_fname = "bitv_spec.mli";
                                          pos_lnum = 148;
                                          pos_bol = 9549;
                                          pos_cnum = 9576
                                        }
                                    }))
                       then None
                       else
                         Some
                           (Ortac_runtime.report "Bitv_spec" "create 8 false"
                              (Either.left "Invalid_argument") "fill"
                              [("0 <= ofs",
                                 {
                                   Ortac_runtime.start =
                                     {
                                       pos_fname = "bitv_spec.mli";
                                       pos_lnum = 148;
                                       pos_bol = 9549;
                                       pos_cnum = 9568
                                     };
                                   Ortac_runtime.stop =
                                     {
                                       pos_fname = "bitv_spec.mli";
                                       pos_lnum = 148;
                                       pos_bol = 9549;
                                       pos_cnum = 9576
                                     }
                                 })]))
                      (Ortac_runtime.append
                         (if
                            let tmp__135_ = Model.get state__099_ 0 in
                            try
                              Ortac_runtime.Gospelstdlib.(<=)
                                (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                                (Ortac_runtime.Gospelstdlib.integer_of_int
                                   len_1)
                            with
                            | e ->
                                raise
                                  (Ortac_runtime.Partial_function
                                     (e,
                                       {
                                         Ortac_runtime.start =
                                           {
                                             pos_fname = "bitv_spec.mli";
                                             pos_lnum = 149;
                                             pos_bol = 9577;
                                             pos_cnum = 9596
                                           };
                                         Ortac_runtime.stop =
                                           {
                                             pos_fname = "bitv_spec.mli";
                                             pos_lnum = 149;
                                             pos_bol = 9577;
                                             pos_cnum = 9604
                                           }
                                       }))
                          then None
                          else
                            Some
                              (Ortac_runtime.report "Bitv_spec"
                                 "create 8 false"
                                 (Either.left "Invalid_argument") "fill"
                                 [("0 <= len",
                                    {
                                      Ortac_runtime.start =
                                        {
                                          pos_fname = "bitv_spec.mli";
                                          pos_lnum = 149;
                                          pos_bol = 9577;
                                          pos_cnum = 9596
                                        };
                                      Ortac_runtime.stop =
                                        {
                                          pos_fname = "bitv_spec.mli";
                                          pos_lnum = 149;
                                          pos_bol = 9577;
                                          pos_cnum = 9604
                                        }
                                    })]))
                         (if
                            let tmp__135_ = Model.get state__099_ 0 in
                            try
                              Ortac_runtime.Gospelstdlib.(<=)
                                (Ortac_runtime.Gospelstdlib.(+)
                                   (Ortac_runtime.Gospelstdlib.integer_of_int
                                      ofs)
                                   (Ortac_runtime.Gospelstdlib.integer_of_int
                                      len_1)) tmp__135_.size
                            with
                            | e ->
                                raise
                                  (Ortac_runtime.Partial_function
                                     (e,
                                       {
                                         Ortac_runtime.start =
                                           {
                                             pos_fname = "bitv_spec.mli";
                                             pos_lnum = 150;
                                             pos_bol = 9605;
                                             pos_cnum = 9624
                                           };
                                         Ortac_runtime.stop =
                                           {
                                             pos_fname = "bitv_spec.mli";
                                             pos_lnum = 150;
                                             pos_bol = 9605;
                                             pos_cnum = 9643
                                           }
                                       }))
                          then None
                          else
                            Some
                              (Ortac_runtime.report "Bitv_spec"
                                 "create 8 false"
                                 (Either.left "Invalid_argument") "fill"
                                 [("ofs + len <= v.size",
                                    {
                                      Ortac_runtime.start =
                                        {
                                          pos_fname = "bitv_spec.mli";
                                          pos_lnum = 150;
                                          pos_bol = 9605;
                                          pos_cnum = 9624
                                        };
                                      Ortac_runtime.stop =
                                        {
                                          pos_fname = "bitv_spec.mli";
                                          pos_lnum = 150;
                                          pos_bol = 9605;
                                          pos_cnum = 9643
                                        }
                                    })])))))
      | (Blit (o1, o2, len_2), Res ((Result (Unit, Exn), _), res)) ->
          (match Ortac_runtime.append
                   (if
                      let tmp__136_ = Model.get state__099_ 0
                      and tmp__137_ = Model.get state__099_ 1 in
                      try
                        let __t1__138_ =
                          Ortac_runtime.Gospelstdlib.(<=)
                            (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                            (Ortac_runtime.Gospelstdlib.integer_of_int o1) in
                        let __t2__139_ =
                          let __t1__140_ =
                            Ortac_runtime.Gospelstdlib.(<=)
                              (Ortac_runtime.Gospelstdlib.integer_of_int o1)
                              (Ortac_runtime.Gospelstdlib.(+)
                                 (Ortac_runtime.Gospelstdlib.integer_of_int
                                    o1)
                                 (Ortac_runtime.Gospelstdlib.integer_of_int
                                    len_2)) in
                          let __t2__141_ =
                            Ortac_runtime.Gospelstdlib.(<=)
                              (Ortac_runtime.Gospelstdlib.(+)
                                 (Ortac_runtime.Gospelstdlib.integer_of_int
                                    o1)
                                 (Ortac_runtime.Gospelstdlib.integer_of_int
                                    len_2)) tmp__136_.size in
                          __t1__140_ && __t2__141_ in
                        __t1__138_ && __t2__139_
                      with
                      | e ->
                          raise
                            (Ortac_runtime.Partial_function
                               (e,
                                 {
                                   Ortac_runtime.start =
                                     {
                                       pos_fname = "bitv_spec.mli";
                                       pos_lnum = 165;
                                       pos_bol = 10703;
                                       pos_cnum = 10722
                                     };
                                   Ortac_runtime.stop =
                                     {
                                       pos_fname = "bitv_spec.mli";
                                       pos_lnum = 165;
                                       pos_bol = 10703;
                                       pos_cnum = 10752
                                     }
                                 }))
                    then None
                    else
                      Some
                        (Ortac_runtime.report "Bitv_spec" "create 8 false"
                           (Either.left "Invalid_argument") "blit"
                           [("0 <= o1 <= o1 + len <= v1.size",
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 165;
                                    pos_bol = 10703;
                                    pos_cnum = 10722
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 165;
                                    pos_bol = 10703;
                                    pos_cnum = 10752
                                  }
                              })]))
                   (if
                      let tmp__136_ = Model.get state__099_ 0
                      and tmp__137_ = Model.get state__099_ 1 in
                      try
                        let __t1__142_ =
                          Ortac_runtime.Gospelstdlib.(<=)
                            (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                            (Ortac_runtime.Gospelstdlib.integer_of_int o2) in
                        let __t2__143_ =
                          let __t1__144_ =
                            Ortac_runtime.Gospelstdlib.(<=)
                              (Ortac_runtime.Gospelstdlib.integer_of_int o2)
                              (Ortac_runtime.Gospelstdlib.(+)
                                 (Ortac_runtime.Gospelstdlib.integer_of_int
                                    o2)
                                 (Ortac_runtime.Gospelstdlib.integer_of_int
                                    len_2)) in
                          let __t2__145_ =
                            Ortac_runtime.Gospelstdlib.(<=)
                              (Ortac_runtime.Gospelstdlib.(+)
                                 (Ortac_runtime.Gospelstdlib.integer_of_int
                                    o2)
                                 (Ortac_runtime.Gospelstdlib.integer_of_int
                                    len_2)) tmp__137_.size in
                          __t1__144_ && __t2__145_ in
                        __t1__142_ && __t2__143_
                      with
                      | e ->
                          raise
                            (Ortac_runtime.Partial_function
                               (e,
                                 {
                                   Ortac_runtime.start =
                                     {
                                       pos_fname = "bitv_spec.mli";
                                       pos_lnum = 166;
                                       pos_bol = 10753;
                                       pos_cnum = 10772
                                     };
                                   Ortac_runtime.stop =
                                     {
                                       pos_fname = "bitv_spec.mli";
                                       pos_lnum = 166;
                                       pos_bol = 10753;
                                       pos_cnum = 10802
                                     }
                                 }))
                    then None
                    else
                      Some
                        (Ortac_runtime.report "Bitv_spec" "create 8 false"
                           (Either.left "Invalid_argument") "blit"
                           [("0 <= o2 <= o2 + len <= v2.size",
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 166;
                                    pos_bol = 10753;
                                    pos_cnum = 10772
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 166;
                                    pos_bol = 10753;
                                    pos_cnum = 10802
                                  }
                              })]))
           with
           | None -> (match res with | Ok _ -> None | _ -> None)
           | _ ->
               (match res with
                | Error (Invalid_argument _) -> None
                | _ ->
                    Ortac_runtime.append
                      (if
                         let tmp__136_ = Model.get state__099_ 0
                         and tmp__137_ = Model.get state__099_ 1 in
                         try
                           let __t1__138_ =
                             Ortac_runtime.Gospelstdlib.(<=)
                               (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                               (Ortac_runtime.Gospelstdlib.integer_of_int o1) in
                           let __t2__139_ =
                             let __t1__140_ =
                               Ortac_runtime.Gospelstdlib.(<=)
                                 (Ortac_runtime.Gospelstdlib.integer_of_int
                                    o1)
                                 (Ortac_runtime.Gospelstdlib.(+)
                                    (Ortac_runtime.Gospelstdlib.integer_of_int
                                       o1)
                                    (Ortac_runtime.Gospelstdlib.integer_of_int
                                       len_2)) in
                             let __t2__141_ =
                               Ortac_runtime.Gospelstdlib.(<=)
                                 (Ortac_runtime.Gospelstdlib.(+)
                                    (Ortac_runtime.Gospelstdlib.integer_of_int
                                       o1)
                                    (Ortac_runtime.Gospelstdlib.integer_of_int
                                       len_2)) tmp__136_.size in
                             __t1__140_ && __t2__141_ in
                           __t1__138_ && __t2__139_
                         with
                         | e ->
                             raise
                               (Ortac_runtime.Partial_function
                                  (e,
                                    {
                                      Ortac_runtime.start =
                                        {
                                          pos_fname = "bitv_spec.mli";
                                          pos_lnum = 165;
                                          pos_bol = 10703;
                                          pos_cnum = 10722
                                        };
                                      Ortac_runtime.stop =
                                        {
                                          pos_fname = "bitv_spec.mli";
                                          pos_lnum = 165;
                                          pos_bol = 10703;
                                          pos_cnum = 10752
                                        }
                                    }))
                       then None
                       else
                         Some
                           (Ortac_runtime.report "Bitv_spec" "create 8 false"
                              (Either.left "Invalid_argument") "blit"
                              [("0 <= o1 <= o1 + len <= v1.size",
                                 {
                                   Ortac_runtime.start =
                                     {
                                       pos_fname = "bitv_spec.mli";
                                       pos_lnum = 165;
                                       pos_bol = 10703;
                                       pos_cnum = 10722
                                     };
                                   Ortac_runtime.stop =
                                     {
                                       pos_fname = "bitv_spec.mli";
                                       pos_lnum = 165;
                                       pos_bol = 10703;
                                       pos_cnum = 10752
                                     }
                                 })]))
                      (if
                         let tmp__136_ = Model.get state__099_ 0
                         and tmp__137_ = Model.get state__099_ 1 in
                         try
                           let __t1__142_ =
                             Ortac_runtime.Gospelstdlib.(<=)
                               (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                               (Ortac_runtime.Gospelstdlib.integer_of_int o2) in
                           let __t2__143_ =
                             let __t1__144_ =
                               Ortac_runtime.Gospelstdlib.(<=)
                                 (Ortac_runtime.Gospelstdlib.integer_of_int
                                    o2)
                                 (Ortac_runtime.Gospelstdlib.(+)
                                    (Ortac_runtime.Gospelstdlib.integer_of_int
                                       o2)
                                    (Ortac_runtime.Gospelstdlib.integer_of_int
                                       len_2)) in
                             let __t2__145_ =
                               Ortac_runtime.Gospelstdlib.(<=)
                                 (Ortac_runtime.Gospelstdlib.(+)
                                    (Ortac_runtime.Gospelstdlib.integer_of_int
                                       o2)
                                    (Ortac_runtime.Gospelstdlib.integer_of_int
                                       len_2)) tmp__137_.size in
                             __t1__144_ && __t2__145_ in
                           __t1__142_ && __t2__143_
                         with
                         | e ->
                             raise
                               (Ortac_runtime.Partial_function
                                  (e,
                                    {
                                      Ortac_runtime.start =
                                        {
                                          pos_fname = "bitv_spec.mli";
                                          pos_lnum = 166;
                                          pos_bol = 10753;
                                          pos_cnum = 10772
                                        };
                                      Ortac_runtime.stop =
                                        {
                                          pos_fname = "bitv_spec.mli";
                                          pos_lnum = 166;
                                          pos_bol = 10753;
                                          pos_cnum = 10802
                                        }
                                    }))
                       then None
                       else
                         Some
                           (Ortac_runtime.report "Bitv_spec" "create 8 false"
                              (Either.left "Invalid_argument") "blit"
                              [("0 <= o2 <= o2 + len <= v2.size",
                                 {
                                   Ortac_runtime.start =
                                     {
                                       pos_fname = "bitv_spec.mli";
                                       pos_lnum = 166;
                                       pos_bol = 10753;
                                       pos_cnum = 10772
                                     };
                                   Ortac_runtime.stop =
                                     {
                                       pos_fname = "bitv_spec.mli";
                                       pos_lnum = 166;
                                       pos_bol = 10753;
                                       pos_cnum = 10802
                                     }
                                 })]))))
      | (Pop, Res ((Int, _), r_14)) ->
          if
            let v_old__148_ = Model.get state__099_ 0
            and v_new__149_ = lazy (Model.get (Lazy.force new_state__101_) 0) in
            (try
               (Ortac_runtime.Gospelstdlib.integer_of_int r_14) =
                 (population (Lazy.force v_new__149_).bits_1)
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "bitv_spec.mli";
                              pos_lnum = 208;
                              pos_bol = 12900;
                              pos_cnum = 12920
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "bitv_spec.mli";
                              pos_lnum = 208;
                              pos_bol = 12900;
                              pos_cnum = 12941
                            }
                        })))
          then None
          else
            Some
              (Ortac_runtime.report "Bitv_spec" "create 8 false"
                 (Either.right
                    (Res
                       (integer,
                         (let v_old__146_ = Model.get state__099_ 0
                          and v_new__147_ =
                            lazy (Model.get (Lazy.force new_state__101_) 0) in
                          try population (Lazy.force v_new__147_).bits_1
                          with
                          | e ->
                              raise
                                (Ortac_runtime.Partial_function
                                   (e,
                                     {
                                       Ortac_runtime.start =
                                         {
                                           pos_fname = "bitv_spec.mli";
                                           pos_lnum = 208;
                                           pos_bol = 12900;
                                           pos_cnum = 12924
                                         };
                                       Ortac_runtime.stop =
                                         {
                                           pos_fname = "bitv_spec.mli";
                                           pos_lnum = 208;
                                           pos_bol = 12900;
                                           pos_cnum = 12934
                                         }
                                     })))))) "pop"
                 [("r = population v.bits",
                    {
                      Ortac_runtime.start =
                        {
                          pos_fname = "bitv_spec.mli";
                          pos_lnum = 208;
                          pos_bol = 12900;
                          pos_cnum = 12920
                        };
                      Ortac_runtime.stop =
                        {
                          pos_fname = "bitv_spec.mli";
                          pos_lnum = 208;
                          pos_bol = 12900;
                          pos_cnum = 12941
                        }
                    })])
      | (Bw_and, Res ((Result (SUT, Exn), _), r_3)) ->
          (match if
                   let tmp__151_ = Model.get state__099_ 0
                   and tmp__152_ = Model.get state__099_ 1 in
                   try tmp__151_.size = tmp__152_.size
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 228;
                                    pos_bol = 14042;
                                    pos_cnum = 14061
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 228;
                                    pos_bol = 14042;
                                    pos_cnum = 14078
                                  }
                              }))
                 then None
                 else
                   Some
                     (Ortac_runtime.report "Bitv_spec" "create 8 false"
                        (Either.left "Invalid_argument") "bw_and"
                        [("v1.size = v2.size",
                           {
                             Ortac_runtime.start =
                               {
                                 pos_fname = "bitv_spec.mli";
                                 pos_lnum = 228;
                                 pos_bol = 14042;
                                 pos_cnum = 14061
                               };
                             Ortac_runtime.stop =
                               {
                                 pos_fname = "bitv_spec.mli";
                                 pos_lnum = 228;
                                 pos_bol = 14042;
                                 pos_cnum = 14078
                               }
                           })])
           with
           | None -> (match r_3 with | Ok r_3 -> None | _ -> None)
           | _ ->
               (match r_3 with
                | Error (Invalid_argument _) -> None
                | _ ->
                    if
                      let tmp__151_ = Model.get state__099_ 0
                      and tmp__152_ = Model.get state__099_ 1 in
                      (try tmp__151_.size = tmp__152_.size
                       with
                       | e ->
                           raise
                             (Ortac_runtime.Partial_function
                                (e,
                                  {
                                    Ortac_runtime.start =
                                      {
                                        pos_fname = "bitv_spec.mli";
                                        pos_lnum = 228;
                                        pos_bol = 14042;
                                        pos_cnum = 14061
                                      };
                                    Ortac_runtime.stop =
                                      {
                                        pos_fname = "bitv_spec.mli";
                                        pos_lnum = 228;
                                        pos_bol = 14042;
                                        pos_cnum = 14078
                                      }
                                  })))
                    then None
                    else
                      Some
                        (Ortac_runtime.report "Bitv_spec" "create 8 false"
                           (Either.left "Invalid_argument") "bw_and"
                           [("v1.size = v2.size",
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 228;
                                    pos_bol = 14042;
                                    pos_cnum = 14061
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 228;
                                    pos_bol = 14042;
                                    pos_cnum = 14078
                                  }
                              })])))
      | (Bw_or, Res ((Result (SUT, Exn), _), r_4)) ->
          (match if
                   let tmp__153_ = Model.get state__099_ 0
                   and tmp__154_ = Model.get state__099_ 1 in
                   try tmp__153_.size = tmp__154_.size
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 236;
                                    pos_bol = 14633;
                                    pos_cnum = 14652
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 236;
                                    pos_bol = 14633;
                                    pos_cnum = 14669
                                  }
                              }))
                 then None
                 else
                   Some
                     (Ortac_runtime.report "Bitv_spec" "create 8 false"
                        (Either.left "Invalid_argument") "bw_or"
                        [("v1.size = v2.size",
                           {
                             Ortac_runtime.start =
                               {
                                 pos_fname = "bitv_spec.mli";
                                 pos_lnum = 236;
                                 pos_bol = 14633;
                                 pos_cnum = 14652
                               };
                             Ortac_runtime.stop =
                               {
                                 pos_fname = "bitv_spec.mli";
                                 pos_lnum = 236;
                                 pos_bol = 14633;
                                 pos_cnum = 14669
                               }
                           })])
           with
           | None -> (match r_4 with | Ok r_4 -> None | _ -> None)
           | _ ->
               (match r_4 with
                | Error (Invalid_argument _) -> None
                | _ ->
                    if
                      let tmp__153_ = Model.get state__099_ 0
                      and tmp__154_ = Model.get state__099_ 1 in
                      (try tmp__153_.size = tmp__154_.size
                       with
                       | e ->
                           raise
                             (Ortac_runtime.Partial_function
                                (e,
                                  {
                                    Ortac_runtime.start =
                                      {
                                        pos_fname = "bitv_spec.mli";
                                        pos_lnum = 236;
                                        pos_bol = 14633;
                                        pos_cnum = 14652
                                      };
                                    Ortac_runtime.stop =
                                      {
                                        pos_fname = "bitv_spec.mli";
                                        pos_lnum = 236;
                                        pos_bol = 14633;
                                        pos_cnum = 14669
                                      }
                                  })))
                    then None
                    else
                      Some
                        (Ortac_runtime.report "Bitv_spec" "create 8 false"
                           (Either.left "Invalid_argument") "bw_or"
                           [("v1.size = v2.size",
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 236;
                                    pos_bol = 14633;
                                    pos_cnum = 14652
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 236;
                                    pos_bol = 14633;
                                    pos_cnum = 14669
                                  }
                              })])))
      | (Bw_xor, Res ((Result (SUT, Exn), _), r_5)) ->
          (match if
                   let tmp__155_ = Model.get state__099_ 0
                   and tmp__156_ = Model.get state__099_ 1 in
                   try tmp__155_.size = tmp__156_.size
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 244;
                                    pos_bol = 15224;
                                    pos_cnum = 15243
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 244;
                                    pos_bol = 15224;
                                    pos_cnum = 15260
                                  }
                              }))
                 then None
                 else
                   Some
                     (Ortac_runtime.report "Bitv_spec" "create 8 false"
                        (Either.left "Invalid_argument") "bw_xor"
                        [("v1.size = v2.size",
                           {
                             Ortac_runtime.start =
                               {
                                 pos_fname = "bitv_spec.mli";
                                 pos_lnum = 244;
                                 pos_bol = 15224;
                                 pos_cnum = 15243
                               };
                             Ortac_runtime.stop =
                               {
                                 pos_fname = "bitv_spec.mli";
                                 pos_lnum = 244;
                                 pos_bol = 15224;
                                 pos_cnum = 15260
                               }
                           })])
           with
           | None -> (match r_5 with | Ok r_5 -> None | _ -> None)
           | _ ->
               (match r_5 with
                | Error (Invalid_argument _) -> None
                | _ ->
                    if
                      let tmp__155_ = Model.get state__099_ 0
                      and tmp__156_ = Model.get state__099_ 1 in
                      (try tmp__155_.size = tmp__156_.size
                       with
                       | e ->
                           raise
                             (Ortac_runtime.Partial_function
                                (e,
                                  {
                                    Ortac_runtime.start =
                                      {
                                        pos_fname = "bitv_spec.mli";
                                        pos_lnum = 244;
                                        pos_bol = 15224;
                                        pos_cnum = 15243
                                      };
                                    Ortac_runtime.stop =
                                      {
                                        pos_fname = "bitv_spec.mli";
                                        pos_lnum = 244;
                                        pos_bol = 15224;
                                        pos_cnum = 15260
                                      }
                                  })))
                    then None
                    else
                      Some
                        (Ortac_runtime.report "Bitv_spec" "create 8 false"
                           (Either.left "Invalid_argument") "bw_xor"
                           [("v1.size = v2.size",
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 244;
                                    pos_bol = 15224;
                                    pos_cnum = 15243
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "bitv_spec.mli";
                                    pos_lnum = 244;
                                    pos_bol = 15224;
                                    pos_cnum = 15260
                                  }
                              })])))
      | (Bw_not, Res ((SUT, _), r_6)) -> None
      | (Shiftl n_3, Res ((SUT, _), r_7)) -> None
      | (Shiftr n_4, Res ((SUT, _), r_8)) -> None
      | (Rotatel n_5, Res ((SUT, _), r_9)) -> None
      | (Rotater n_6, Res ((SUT, _), r_10)) -> None
      | (All_zeros, Res ((Bool, _), r_15)) ->
          if
            let v_old__164_ = Model.get state__099_ 0
            and v_new__165_ = lazy (Model.get (Lazy.force new_state__101_) 0) in
            (try
               r_15 =
                 (if
                    not
                      ((Ortac_runtime.Gospelstdlib.Sequence.fold_left op_or
                          false (Lazy.force v_new__165_).bits_1)
                         = true)
                  then true
                  else false)
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "bitv_spec.mli";
                              pos_lnum = 303;
                              pos_bol = 19499;
                              pos_cnum = 19519
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "bitv_spec.mli";
                              pos_lnum = 303;
                              pos_bol = 19499;
                              pos_cnum = 19566
                            }
                        })))
          then None
          else
            Some
              (Ortac_runtime.report "Bitv_spec" "create 8 false"
                 (Either.right
                    (Res
                       (bool,
                         (let v_old__162_ = Model.get state__099_ 0
                          and v_new__163_ =
                            lazy (Model.get (Lazy.force new_state__101_) 0) in
                          try
                            if
                              not
                                ((Ortac_runtime.Gospelstdlib.Sequence.fold_left
                                    op_or false
                                    (Lazy.force v_new__163_).bits_1)
                                   = true)
                            then true
                            else false
                          with
                          | e ->
                              raise
                                (Ortac_runtime.Partial_function
                                   (e,
                                     {
                                       Ortac_runtime.start =
                                         {
                                           pos_fname = "bitv_spec.mli";
                                           pos_lnum = 303;
                                           pos_bol = 19499;
                                           pos_cnum = 19523
                                         };
                                       Ortac_runtime.stop =
                                         {
                                           pos_fname = "bitv_spec.mli";
                                           pos_lnum = 303;
                                           pos_bol = 19499;
                                           pos_cnum = 19566
                                         }
                                     })))))) "all_zeros"
                 [("r = not (Sequence.fold_left op_or false v.bits)",
                    {
                      Ortac_runtime.start =
                        {
                          pos_fname = "bitv_spec.mli";
                          pos_lnum = 303;
                          pos_bol = 19499;
                          pos_cnum = 19519
                        };
                      Ortac_runtime.stop =
                        {
                          pos_fname = "bitv_spec.mli";
                          pos_lnum = 303;
                          pos_bol = 19499;
                          pos_cnum = 19566
                        }
                    })])
      | (All_ones, Res ((Bool, _), r_16)) ->
          if
            let v_old__169_ = Model.get state__099_ 0
            and v_new__170_ = lazy (Model.get (Lazy.force new_state__101_) 0) in
            (try
               r_16 =
                 (Ortac_runtime.Gospelstdlib.Sequence.fold_left op_and true
                    (Lazy.force v_new__170_).bits_1)
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "bitv_spec.mli";
                              pos_lnum = 308;
                              pos_bol = 19986;
                              pos_cnum = 20006
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "bitv_spec.mli";
                              pos_lnum = 308;
                              pos_bol = 19986;
                              pos_cnum = 20047
                            }
                        })))
          then None
          else
            Some
              (Ortac_runtime.report "Bitv_spec" "create 8 false"
                 (Either.right
                    (Res
                       (bool,
                         (let v_old__167_ = Model.get state__099_ 0
                          and v_new__168_ =
                            lazy (Model.get (Lazy.force new_state__101_) 0) in
                          try
                            Ortac_runtime.Gospelstdlib.Sequence.fold_left
                              op_and true (Lazy.force v_new__168_).bits_1
                          with
                          | e ->
                              raise
                                (Ortac_runtime.Partial_function
                                   (e,
                                     {
                                       Ortac_runtime.start =
                                         {
                                           pos_fname = "bitv_spec.mli";
                                           pos_lnum = 308;
                                           pos_bol = 19986;
                                           pos_cnum = 20010
                                         };
                                       Ortac_runtime.stop =
                                         {
                                           pos_fname = "bitv_spec.mli";
                                           pos_lnum = 308;
                                           pos_bol = 19986;
                                           pos_cnum = 20047
                                         }
                                     })))))) "all_ones"
                 [("r = Sequence.fold_left op_and true v.bits",
                    {
                      Ortac_runtime.start =
                        {
                          pos_fname = "bitv_spec.mli";
                          pos_lnum = 308;
                          pos_bol = 19986;
                          pos_cnum = 20006
                        };
                      Ortac_runtime.stop =
                        {
                          pos_fname = "bitv_spec.mli";
                          pos_lnum = 308;
                          pos_bol = 19986;
                          pos_cnum = 20047
                        }
                    })])
      | _ -> None
let _ =
  QCheck_base_runner.run_tests_main
    (let count = 1000 in
     [STMTests.agree_test ~count ~name:"Bitv_spec STM tests" 2
        check_init_state ortac_show_cmd ortac_postcond])
